{"version":3,"sources":["routes/creatorpendingapproval/CreatorPendingApprovalReducer.tsx","routes/creatorpendingapproval/CreatorPendingApprovalView.react.tsx","routes/creatorpendingapproval/CreatorPendingApproval.react.tsx","routes/creatorpendingapproval/CreatorPendingApprovalUtil.tsx","routes/creatorpendingapproval/CreatorPendingApproval.module.scss","assets/images/pendingApprovalScreenImage.svg"],"names":["creatorPendingApprovalStateInit","initialState","creatorPendingApprovalReducer","state","action","type","compose","withRouter","props","React","useReducer","currentUser","className","s","creatorPendingApprovalRoot","statusCard","icon","src","pendingApprovalScreenImage","title","subTitle","extra","onClick","e","preventDefault","history","push","error","notification","message","description","placement","CreatorPendingApproval","useContext","AppContext","appState","creatorPendingApprovalData","authUser","pathname","matchParams","useState","isLoading","data","updateData","fetchData","a","useEffect","useFetchCreatorPendingApprovalData","location","match","params","LoadingView","currentCreator","creatorStatus","to","module","exports"],"mappings":"4RAUMA,EAAkC,SACtCC,GAEA,OAAO,eACFA,IAIDC,EAAgC,SACpCC,EACAC,GAII,OAFIA,EAAOC,KAEJF,G,kBCsCEG,cAAsBC,IAAtBD,EA1CqC,SAACE,GASnD,OARAC,IAAMC,WACJR,EACA,CACES,YAAaH,EAAMG,aAErBX,GAIA,yBAAKY,UAAWC,IAAEC,4BAChB,6BACE,kBAAC,IAAD,CAAMF,UAAWC,IAAEE,YACjB,kBAAC,IAAD,CACEC,KAAM,yBAAKC,IAAKC,MAChBC,MAAK,2CACLC,SAAQ,iIACRC,MACE,kBAAC,IAAD,CACEhB,KAAK,UACLiB,QAAS,SAAAC,GACPA,EAAEC,iBACFhB,EAAMiB,QAAQC,KAAK,4CAGpB,oBAMVlB,EAAMmB,OACLC,IAAaD,MAAM,CACjBE,QAAS,QACTC,YACE,yEACFC,UAAW,oBCVNC,EAjCiC,SAACxB,GAAkB,IAAD,EAC7CC,IAAMwB,WAAWC,KAA7BC,EADyD,oBAE1DC,ECNmC,SACzCC,EACAC,EACAC,GACgC,IAAD,EACJ9B,IAAM+B,SAAqC,CACpEC,WAAW,EACXd,MAAO,OAHsB,mBACxBe,EADwB,KAClBC,EADkB,KAMzBC,EAAS,uCAAG,sBAAAC,EAAA,sDAChB,IACEF,EAAW,eACND,EADK,CAERD,WAAW,KAEb,MAAOd,GACPgB,EAAW,eACND,EADK,CAERD,WAAW,EACXd,MAAOA,KAVK,2CAAH,qDAmBf,OAJAlB,IAAMqC,WAAU,WACdF,MACC,IAEIF,EDvB4BK,CACjCZ,EAASE,SACT7B,EAAMwC,SAASV,SACf9B,EAAMyC,MAAMC,QAGd,OAAId,EAA2BK,UACtB,kBAACU,EAAA,EAAD,MACGhB,EAASE,SAGnBF,EAASE,UACTF,EAASiB,gBACiC,0BAA1CjB,EAASiB,eAAeC,cAEjB,kBAAC,IAAD,CAAUC,GAAI,kCAErBnB,EAASE,UACTF,EAASiB,gBACiC,aAA1CjB,EAASiB,eAAeC,cAEjB,kBAAC,IAAD,CAAUC,GAAI,MAGrB,kBAAC,EAAD,CACE3C,YAAawB,EAASiB,eACtBzB,MAAOS,EAA2BT,QAjB7B,kBAAC,IAAD,CAAU2B,GAAI,wB,oBEvBzBC,EAAOC,QAAU,CAAC,WAAa,6C,oBCD/BD,EAAOC,QAAU,IAA0B","file":"static/js/46.18eb0380.chunk.js","sourcesContent":["import * as DataTypes from \"data/types\";\n\ninterface CreatorPendingApprovalState {\n  currentUser: DataTypes.User;\n}\n\ninterface CreatorPendingApprovalStateAction {\n  type: string;\n}\n\nconst creatorPendingApprovalStateInit = (\n  initialState: CreatorPendingApprovalState,\n): CreatorPendingApprovalState => {\n  return {\n    ...initialState,\n  };\n};\n\nconst creatorPendingApprovalReducer = (\n  state: CreatorPendingApprovalState,\n  action: CreatorPendingApprovalStateAction,\n): CreatorPendingApprovalState => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport { creatorPendingApprovalStateInit, creatorPendingApprovalReducer };\n","import { Button, Card, Icon, Result, notification } from \"antd\";\nimport * as DataTypes from \"data/types\";\nimport React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { compose } from \"recompose\";\nimport { Grid } from \"semantic-ui-react\";\nimport { History } from \"history\";\nimport s from \"./CreatorPendingApproval.module.scss\";\nimport {\n  creatorPendingApprovalReducer,\n  creatorPendingApprovalStateInit,\n} from \"./CreatorPendingApprovalReducer\";\nimport pendingApprovalScreenImage from \"assets/images/pendingApprovalScreenImage.svg\";\n\ninterface Props {\n  currentUser: DataTypes.Creator;\n  history?: History;\n  error?: Error;\n}\n\nconst CreatorPendingApprovalView: React.FC<Props> = (props: Props) => {\n  React.useReducer(\n    creatorPendingApprovalReducer,\n    {\n      currentUser: props.currentUser,\n    },\n    creatorPendingApprovalStateInit,\n  );\n\n  return (\n    <div className={s.creatorPendingApprovalRoot}>\n      <div>\n        <Card className={s.statusCard}>\n          <Result\n            icon={<img src={pendingApprovalScreenImage} />}\n            title={`Thanks! We've received your information.`}\n            subTitle={`We'll review your profile within the next few days. Once your profile is approved, you'll have full access to our CreatorsHub.`}\n            extra={\n              <Button\n                type=\"primary\"\n                onClick={e => {\n                  e.preventDefault();\n                  props.history.push(\"/creator-pending-approval-edit-profile\");\n                }}\n              >\n                {\"Edit Profile\"}\n              </Button>\n            }\n          />\n        </Card>\n      </div>\n      {props.error &&\n        notification.error({\n          message: \"Oops!\",\n          description:\n            \"Some content may not have loaded properly. We're working on fixing it.\",\n          placement: \"bottomRight\",\n        })}\n    </div>\n  );\n};\n\nexport default compose<Props, Props>(withRouter)(CreatorPendingApprovalView);\n","import { AppContext } from \"App\";\nimport React from \"react\";\nimport { Redirect, match } from \"react-router-dom\";\nimport { Location } from \"history\";\nimport LoadingView from \"components/Views/LoadingView\";\nimport { useFetchCreatorPendingApprovalData } from \"./CreatorPendingApprovalUtil\";\nimport CreatorPendingApprovalView from \"./CreatorPendingApprovalView.react\";\n\ninterface Props {\n  location?: Location;\n  match?: match;\n}\n\nconst CreatorPendingApproval: React.FC<Props> = (props: Props) => {\n  const [appState] = React.useContext(AppContext);\n  const creatorPendingApprovalData = useFetchCreatorPendingApprovalData(\n    appState.authUser,\n    props.location.pathname,\n    props.match.params,\n  );\n\n  if (creatorPendingApprovalData.isLoading) {\n    return <LoadingView />;\n  } else if (!appState.authUser) {\n    return <Redirect to={\"/register-creator\"} />;\n  } else if (\n    appState.authUser &&\n    appState.currentCreator &&\n    appState.currentCreator.creatorStatus === \"NEEDS_PROFILE_DETAILS\"\n  ) {\n    return <Redirect to={\"/creator-registration-details\"} />;\n  } else if (\n    appState.authUser &&\n    appState.currentCreator &&\n    appState.currentCreator.creatorStatus === \"APPROVED\"\n  ) {\n    return <Redirect to={\"/\"} />;\n  }\n  return (\n    <CreatorPendingApprovalView\n      currentUser={appState.currentCreator}\n      error={creatorPendingApprovalData.error}\n    />\n  );\n};\n\nexport default CreatorPendingApproval;\n","import * as DataTypes from \"data/types\";\nimport React from \"react\";\nimport RESTAPIClient from \"RESTAPIClient\";\n\ninterface CreatorPendingApprovalData {\n  isLoading: boolean;\n  error?: Error;\n}\n\nconst useFetchCreatorPendingApprovalData = (\n  authUser,\n  pathname,\n  matchParams,\n): CreatorPendingApprovalData => {\n  const [data, updateData] = React.useState<CreatorPendingApprovalData>({\n    isLoading: true,\n    error: null,\n  });\n\n  const fetchData = async (): Promise<void> => {\n    try {\n      updateData({\n        ...data,\n        isLoading: false,\n      });\n    } catch (error) {\n      updateData({\n        ...data,\n        isLoading: false,\n        error: error,\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n\n  return data;\n};\n\nexport { useFetchCreatorPendingApprovalData };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusCard\":\"CreatorPendingApproval_statusCard__1QpEx\"};","module.exports = __webpack_public_path__ + \"static/media/pendingApprovalScreenImage.e735c8f0.svg\";"],"sourceRoot":""}