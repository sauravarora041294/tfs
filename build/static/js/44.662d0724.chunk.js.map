{"version":3,"sources":["routes/logincreator/LoginCreatorReducer.tsx","routes/logincreator/LoginCreatorUtil.tsx","routes/logincreator/CreatorLoginForm.react.tsx","routes/logincreator/LoginCreatorView.react.tsx","routes/logincreator/LoginCreator.react.tsx","assets/atTheRate.svg","assets/passswordLock.svg","routes/logincreator/LoginCreator.module.scss"],"names":["LoginCreatorStateActionTypes","upgradeUserToCreatorIfNecessary","userId","a","RESTAPIClient","Creator","get","creatorStatus","upgradeUserToCreator","smallIconStyle","height","width","googleIcon","style","src","google","fbIcon","fb","atTheRate","atTheRateIcon","lockComponent","lockIcon","CreatorLoginForm","props","ref","formRef","React","useRef","useImperativeHandle","history","useHistory","className","s","loginRoot","AuthPageWelcomeSection","formWrapper","loginForm","onClick","goBack","type","formCardTitle","formCardSubTitle","onSubmit","e","preventDefault","loginWithEmailAndPassword","Item","form","getFieldDecorator","rules","required","message","whitespace","initialValue","formData","email","TextInputField","placeholder","autoComplete","suffix","opacity","component","password","detailsFormError","alertMessage","description","SubmitButton","loading","isSubmittingForm","thirdPartyAuthContainer","ThirdPartyLoginButton","continueWithGoogle","continueWithFacebook","loginFormFooter","forgotPasswordText","to","alreadyHaveAccountText","formDataInitialState","loginCreatorInit","initialState","successfullySubmittedForm","loginCreatorReducer","state","action","SET_FORM_DATA","BEGIN_FORM_SUBMISSION","FINISHED_FORM_SUBMISSION_SUCCESSFULLY","sucessfullySubmittedForm","FINISHED_FORM_SUBMISSION_WITH_ERROR","formSubmissionError","submissionError","compose","withRouter","useContext","AppContext","appState","useReducer","loginCreatorState","dispatch","handleThirdPartyAuthIfNeeded","Util","Auth","handleThirdPartyCreatorSignInRedirect","authUserResponse","savedUser","redirectTarget","generateRedirectTargetAfterAuth","push","error","notification","placement","useEffect","creatorLoginFormRef","CreatorLoginFormEnhanced","Form","create","name","forwardRef","castFormToRefForwardingComponent","current","validateFieldsAndScroll","err","values","signInWithEmailAndPassword","registerUserResponse","authResponse","user","uid","redirectTargetAfterAuth","doSignInWithFacebookAuth","doSignInWithGoogleAuth","jwtErrorAlert","useMemo","invalidAuthTokenError","alertJWTError","showIcon","Fragment","LoginCreator","loginCreatorData","authUser","pathname","matchParams","useState","isLoading","data","updateData","fetchData","console","log","useFetchLoginCreatorData","location","match","params","currentCreator","LoadingView","module","exports"],"mappings":"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","file":"static/js/44.662d0724.chunk.js","sourcesContent":["interface FormData {\n  password: string;\n  email: string;\n}\n\nconst formDataInitialState = {\n  password: \"\",\n  email: \"\",\n};\n\ninterface LoginCreatorState {\n  isSubmittingForm?: boolean;\n  sucessfullySubmittedForm?: boolean;\n  formSubmissionError?: Error;\n  formData?: FormData;\n}\n\nenum LoginCreatorStateActionTypes {\n  SET_FORM_DATA = \"SET_FORM_DATA\",\n  BEGIN_FORM_SUBMISSION = \"BEGIN_FORM_SUBMISSION\",\n  FINISHED_FORM_SUBMISSION_WITH_ERROR = \"FINISHED_FORM_SUBMISSION_WITH_ERROR\",\n  FINISHED_FORM_SUBMISSION_SUCCESSFULLY = \"FINISHED_FORM_SUBMISSION_SUCCESSFULLY\",\n}\n\ninterface LoginCreatorStateAction {\n  type: LoginCreatorStateActionTypes;\n  submissionError?: Error;\n  formData?: FormData;\n}\n\nconst loginCreatorInit = (initialState: LoginCreatorState) => {\n  return {\n    ...initialState,\n    isSubmittingForm: false,\n    successfullySubmittedForm: false,\n    formData: formDataInitialState,\n  };\n};\nconst loginCreatorReducer = (\n  state: LoginCreatorState,\n  action: LoginCreatorStateAction,\n): LoginCreatorState => {\n  switch (action.type) {\n    case LoginCreatorStateActionTypes.SET_FORM_DATA:\n      return {\n        ...state,\n        formData: {\n          ...state.formData,\n          ...action.formData,\n        },\n      };\n    case LoginCreatorStateActionTypes.BEGIN_FORM_SUBMISSION:\n      return { ...state, isSubmittingForm: true };\n    case LoginCreatorStateActionTypes.FINISHED_FORM_SUBMISSION_SUCCESSFULLY:\n      return {\n        ...state,\n        isSubmittingForm: false,\n        sucessfullySubmittedForm: true,\n      };\n    case LoginCreatorStateActionTypes.FINISHED_FORM_SUBMISSION_WITH_ERROR:\n      return {\n        ...state,\n        isSubmittingForm: false,\n        sucessfullySubmittedForm: false,\n        formSubmissionError: action.submissionError,\n      };\n    default:\n      return state;\n  }\n};\n\nexport { LoginCreatorStateActionTypes, loginCreatorReducer, loginCreatorInit };\n","import * as DataTypes from \"data/types\";\nimport React from \"react\";\nimport RESTAPIClient from \"RESTAPIClient\";\n\ninterface LoginCreatorData {\n  isLoading: boolean;\n  error?: Error;\n}\n\nconst upgradeUserToCreatorIfNecessary = async (userId: string) => {\n  const creator = await RESTAPIClient.Creator.get(userId);\n  if (!creator.creatorStatus) {\n    await RESTAPIClient.Creator.upgradeUserToCreator(userId);\n  }\n};\n\nconst useFetchLoginCreatorData = (\n  authUser: firebase.User,\n  pathname,\n  matchParams,\n): LoginCreatorData => {\n  const [data, updateData] = React.useState<LoginCreatorData>({\n    isLoading: true,\n    error: null,\n  });\n\n  const fetchData = async (): Promise<void> => {\n    if (authUser) {\n      try {\n        updateData({\n          ...data,\n          isLoading: false,\n        });\n      } catch (error) {\n        console.log(`RouteFetchDataError: ${error}`);\n        updateData({\n          ...data,\n          isLoading: false,\n          error: error,\n        });\n      }\n    } else {\n      updateData({\n        ...data,\n        isLoading: false,\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n\n  return data;\n};\n\nexport { useFetchLoginCreatorData, upgradeUserToCreatorIfNecessary };\n","import { Alert, Button, Card, Divider, Form, Icon, Typography } from \"antd\";\nimport { FormComponentProps } from \"antd/es/form\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport s from \"./LoginCreator.module.scss\";\nimport AuthPageWelcomeSection from \"components/AuthPageWelcomeSection\";\nimport google from \"assets/googleIcon.svg\";\nimport fb from \"assets/fbIcon.svg\";\nimport { useHistory } from \"react-router-dom\";\nimport TextInputField from \"components/AaspireBasicComponents/AaspireBasicFormComponents/TextInputField\";\nimport SubmitButton from \"components/AaspireBasicComponents/AaspireBasicFormComponents/SubmitButton\";\nimport ThirdPartyLoginButton from \"components/AaspireBasicComponents/AaspireBasicFormComponents/ThirdPartyLoginButton\";\nimport atTheRateIcon from \"assets/atTheRate.svg\";\nimport lockIcon from \"assets/passswordLock.svg\";\n\nconst smallIconStyle = {\n  height: \"14px\",\n  width: \"14px\",\n};\n\nconst googleIcon = () => <img style={smallIconStyle} src={google} />;\nconst fbIcon = () => <img style={smallIconStyle} src={fb} />;\nconst atTheRate = () => <img style={smallIconStyle} src={atTheRateIcon} />;\nconst lockComponent = () => <img style={smallIconStyle} src={lockIcon} />;\n\ninterface detailsFormError {\n  message: string;\n}\ninterface FormData {\n  email: string;\n  password: String;\n}\ninterface Props extends FormComponentProps {\n  continueWithFacebook: () => void;\n  continueWithGoogle: () => void;\n  loginWithEmailAndPassword: () => void;\n  isSubmittingForm: boolean;\n  detailsFormError: detailsFormError;\n  formData?: FormData;\n}\n\nconst CreatorLoginForm: React.FC<Props> = (props: Props, ref) => {\n  const formRef = React.useRef();\n  React.useImperativeHandle(ref, () => ({}));\n\n  const history = useHistory();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.loginWithEmailAndPassword();\n  };\n\n  return (\n    <div className={s.loginRoot}>\n      <AuthPageWelcomeSection />\n      <div className={s.formWrapper}>\n        <div className={s.loginForm}>\n          <div className={\"backButton\"} onClick={() => history.goBack()}>\n            <Icon type=\"arrow-left\" /> &nbsp; Back{\" \"}\n          </div>\n\n          <div className={s.formCardTitle}>Login</div>\n          <div className={s.formCardSubTitle}>\n            Sign in with your username or email and password\n          </div>\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <Form.Item>\n              {props.form.getFieldDecorator(\"email\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please provide your email address.\",\n                    whitespace: true,\n                  },\n                ],\n                initialValue: props.formData.email,\n              })(\n                <TextInputField\n                  placeholder=\"Email\"\n                  type=\"email\"\n                  autoComplete=\"username\"\n                  suffix={\n                    <Icon style={{ opacity: \"0.6\" }} component={atTheRate} />\n                  }\n                />,\n              )}\n            </Form.Item>\n            <Form.Item>\n              {props.form.getFieldDecorator(\"password\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please provide a password.\",\n                    whitespace: true,\n                  },\n                ],\n                initialValue: props.formData.password,\n              })(\n                <TextInputField\n                  placeholder=\"Password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  suffix={\n                    <Icon\n                      style={{ opacity: \"0.6\" }}\n                      component={lockComponent}\n                    />\n                  }\n                />,\n              )}\n            </Form.Item>\n            {props.detailsFormError ? (\n              <Alert\n                className={s.alertMessage}\n                message=\"Sign In Failed\"\n                description={props.detailsFormError.message}\n                type=\"error\"\n              />\n            ) : null}\n            <Form.Item>\n              <SubmitButton type=\"primary\" loading={props.isSubmittingForm}>\n                {\"Sign In\"}\n              </SubmitButton>\n            </Form.Item>\n          </Form>\n          <Divider>{\"OR\"}</Divider>\n          <div\n            className={`${s.thirdPartyAuthContainer} loginPageAuthContainer`}\n          >\n            <ThirdPartyLoginButton onClick={props.continueWithGoogle}>\n              <Icon component={googleIcon} />\n              {\"Sign In with Google\"}\n            </ThirdPartyLoginButton>\n            <ThirdPartyLoginButton onClick={props.continueWithFacebook}>\n              <Icon component={fbIcon} />\n              {\"Sign In with Facebook\"}\n            </ThirdPartyLoginButton>\n          </div>\n          <div className={s.loginFormFooter}>\n            <div className={s.forgotPasswordText}>\n              <Link to={\"/resetpassword-creator\"}>{\"Forgot password?\"}</Link>\n            </div>\n\n            <div className={s.alreadyHaveAccountText}>\n              {\"Need an account? \"}\n              <Link to={\"/register-creator\"}>{\" Sign up\"}</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreatorLoginForm;\n","import { AppContext } from \"App\";\nimport { Form, notification, Alert } from \"antd\";\nimport React, { MutableRefObject } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { compose } from \"recompose\";\nimport { History } from \"history\";\nimport CreatorLoginForm from \"./CreatorLoginForm.react\";\nimport { generateRedirectTargetAfterAuth } from \"utilities\";\nimport {\n  LoginCreatorStateActionTypes,\n  loginCreatorReducer,\n  loginCreatorInit,\n} from \"./LoginCreatorReducer\";\nimport { upgradeUserToCreatorIfNecessary } from \"./LoginCreatorUtil\";\nimport Util from \"utilities\";\nimport {\n  doSignInWithFacebookAuth,\n  doSignInWithGoogleAuth,\n} from \"FirebaseClient\";\nimport s from \"./LoginCreator.module.scss\";\nimport { castFormToRefForwardingComponent } from \"utilities/index\";\n\ninterface Props {\n  history?: History;\n  error?: Error;\n}\n\nconst LoginCreatorView: React.FC<Props> = (props: Props) => {\n  const [appState] = React.useContext(AppContext);\n  const [loginCreatorState, dispatch] = React.useReducer(\n    loginCreatorReducer,\n    {},\n    loginCreatorInit,\n  );\n\n  const handleThirdPartyAuthIfNeeded = async () => {\n    const authUserResponse = await Util.Auth.handleThirdPartyCreatorSignInRedirect();\n    if (authUserResponse.savedUser) {\n      const redirectTarget = generateRedirectTargetAfterAuth(\"/\");\n      props.history.push(redirectTarget);\n    }\n    if (authUserResponse.error) {\n      notification.error({\n        message: \"Problem Signing In\",\n        description: `An error occurred while trying to sign you in: ${authUserResponse.error}`,\n        placement: \"bottomRight\",\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    handleThirdPartyAuthIfNeeded();\n  }, []);\n\n  const creatorLoginFormRef: MutableRefObject<any> = React.useRef();\n  const CreatorLoginFormEnhanced = Form.create({\n    name: \"creatorLoginForm\",\n  })(React.forwardRef(castFormToRefForwardingComponent(CreatorLoginForm)));\n\n  const loginWithEmailAndPassword = async () => {\n    creatorLoginFormRef.current.validateFieldsAndScroll(async (err, values) => {\n      if (!err) {\n        dispatch({\n          type: LoginCreatorStateActionTypes.SET_FORM_DATA,\n          formData: values,\n        });\n        dispatch({ type: LoginCreatorStateActionTypes.BEGIN_FORM_SUBMISSION });\n        const registerUserResponse = await Util.Auth.signInWithEmailAndPassword(\n          values.email,\n          values.password,\n        );\n        if (registerUserResponse.error) {\n          dispatch({\n            type:\n              LoginCreatorStateActionTypes.FINISHED_FORM_SUBMISSION_WITH_ERROR,\n            submissionError: registerUserResponse.error,\n          });\n        } else if (registerUserResponse.authResponse.user) {\n          dispatch({\n            type:\n              LoginCreatorStateActionTypes.FINISHED_FORM_SUBMISSION_SUCCESSFULLY,\n          });\n\n          await upgradeUserToCreatorIfNecessary(\n            registerUserResponse.authResponse.user.uid,\n          );\n\n          if (appState.redirectTargetAfterAuth)\n            props.history.push(appState.redirectTargetAfterAuth);\n\n          const redirectTarget = generateRedirectTargetAfterAuth(\"/\");\n          props.history.push(redirectTarget);\n        }\n      }\n    });\n  };\n\n  const continueWithFacebook = async () => {\n    await doSignInWithFacebookAuth();\n  };\n\n  const continueWithGoogle = async () => {\n    await doSignInWithGoogleAuth();\n  };\n\n  const jwtErrorAlert = React.useMemo(\n    () =>\n      appState.invalidAuthTokenError && (\n        <Alert\n          className={s.alertJWTError}\n          message=\"Authentication Error\"\n          description=\"We had some issues authenticating you. Please log in again.\"\n          type=\"error\"\n          showIcon\n        />\n      ),\n    [appState.invalidAuthTokenError],\n  );\n\n  return (\n    <React.Fragment>\n      {jwtErrorAlert}\n      <CreatorLoginFormEnhanced\n        {...{\n          ref: creatorLoginFormRef,\n          loginWithEmailAndPassword: loginWithEmailAndPassword,\n          continueWithGoogle: continueWithGoogle,\n          continueWithFacebook: continueWithFacebook,\n          detailsFormError: loginCreatorState.formSubmissionError,\n          isSubmittingForm: loginCreatorState.isSubmittingForm,\n          formData: loginCreatorState.formData,\n        }}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default compose<Props, Props>(withRouter)(LoginCreatorView);\n","import { AppContext } from \"App\";\nimport React from \"react\";\nimport { Redirect, match } from \"react-router-dom\";\nimport { Location } from \"history\";\nimport LoadingView from \"components/Views/LoadingView\";\nimport { useFetchLoginCreatorData } from \"./LoginCreatorUtil\";\nimport LoginCreatorView from \"./LoginCreatorView.react\";\nimport { generateRedirectTargetAfterAuth } from \"utilities\";\ninterface Props {\n  location?: Location;\n  match?: match;\n}\n\nconst LoginCreator: React.FC<Props> = (props: Props) => {\n  const [appState] = React.useContext(AppContext);\n  const loginCreatorData = useFetchLoginCreatorData(\n    appState.authUser,\n    props.location.pathname,\n    props.match.params,\n  );\n\n  if (appState.authUser) {\n    if (\n      appState.currentCreator &&\n      appState.currentCreator.creatorStatus === \"NEEDS_PROFILE_DETAILS\"\n    ) {\n      return <Redirect to={\"/creator-registration-details\"} />;\n    } else if (\n      appState.authUser &&\n      appState.currentCreator &&\n      appState.currentCreator.creatorStatus === \"PENDING_APPROVAL\"\n    ) {\n      return <Redirect to={\"/creator-pending-approval\"} />;\n    } else if (\n      appState.authUser &&\n      appState.currentCreator &&\n      appState.currentCreator.creatorStatus === \"APPROVED\"\n    ) {\n      const redirectTarget = generateRedirectTargetAfterAuth(\"/\");\n      return <Redirect to={redirectTarget} />;\n    } else {\n      return <LoadingView />;\n    }\n  } else {\n    return <LoginCreatorView error={loginCreatorData.error} />;\n  }\n};\n\nexport default LoginCreator;\n","module.exports = __webpack_public_path__ + \"static/media/atTheRate.01f1962f.svg\";","module.exports = __webpack_public_path__ + \"static/media/passswordLock.d7852dc9.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thirdPartyAuthContainer\":\"LoginCreator_thirdPartyAuthContainer__Bki9b\",\"formWrapper\":\"LoginCreator_formWrapper__1S2pA\",\"loginFormFooter\":\"LoginCreator_loginFormFooter__soVQ-\",\"loginForm\":\"LoginCreator_loginForm__14eDL\",\"loginRoot\":\"LoginCreator_loginRoot__3AtPd\",\"registerCreatorSkillsCard\":\"LoginCreator_registerCreatorSkillsCard__32lAm\",\"signupForm\":\"LoginCreator_signupForm__3BhNV\",\"alertMessage\":\"LoginCreator_alertMessage__1AyFK\",\"signupFormTitle\":\"LoginCreator_signupFormTitle__u2bAY\",\"signupFormSubtitle\":\"LoginCreator_signupFormSubtitle__3TFuF\",\"signupFormField\":\"LoginCreator_signupFormField__2BB7C\",\"skillFormItem\":\"LoginCreator_skillFormItem__1pKqf\",\"selectSkillRow\":\"LoginCreator_selectSkillRow__1wB_j\",\"selectSkillInput\":\"LoginCreator_selectSkillInput__3uher\",\"signupFormHalfSizeField\":\"LoginCreator_signupFormHalfSizeField__23y_-\",\"signupFormCard\":\"LoginCreator_signupFormCard__2JwSx\",\"submitButton\":\"LoginCreator_submitButton__LneYJ\",\"redirectButton\":\"LoginCreator_redirectButton__vtzWj\",\"headerImage\":\"LoginCreator_headerImage__ZYhbk\",\"signupFormRow\":\"LoginCreator_signupFormRow__1qWaR\",\"signupFormColumn\":\"LoginCreator_signupFormColumn__3jsJT\",\"signupViewGridArea\":\"LoginCreator_signupViewGridArea__38YgW\",\"signupViewGridRow\":\"LoginCreator_signupViewGridRow__3-NpV\",\"navbarContainer\":\"LoginCreator_navbarContainer__3ojSP\",\"signupViewLeftSideContent\":\"LoginCreator_signupViewLeftSideContent__3TrE2\",\"signupViewRightSideContent\":\"LoginCreator_signupViewRightSideContent__1cppc\",\"signUpFooter\":\"LoginCreator_signUpFooter__1gEtY\",\"submitSignupFormButton\":\"LoginCreator_submitSignupFormButton__3JfnL\",\"divResumeUpload\":\"LoginCreator_divResumeUpload__1NPR3\",\"formCardTitle\":\"LoginCreator_formCardTitle__2DeoX\",\"formCardSubTitle\":\"LoginCreator_formCardSubTitle__1Dzfw\",\"alreadyHaveAccountText\":\"LoginCreator_alreadyHaveAccountText__13x9W\",\"forgotPasswordText\":\"LoginCreator_forgotPasswordText__CQYmk\"};"],"sourceRoot":""}