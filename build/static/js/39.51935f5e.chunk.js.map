{"version":3,"sources":["routes/creatornotifications/CreatorNotificationsReducer.tsx","routes/creatornotifications/CreatorNotificationsUtil.tsx","routes/creatornotifications/CreatorNotificationListItems/CreatorNotificationBaseListItem.react.tsx","routes/creatornotifications/CreatorNotificationListItems/RequestNotificationListItem.react.tsx","routes/creatornotifications/CreatorNotificationListItems/RequestResolvedNotificationListItem.react.tsx","routes/creatornotifications/CreatorNotificationListItem.react.tsx","routes/creatornotifications/CreatorNotificationsList.react.tsx","routes/creatornotifications/CreatorNotificationsView.react.tsx","routes/creatornotifications/CreatorNotifications.react.tsx","utilities/styleUtils.ts","data/styleTypes/enum.tsx","components/AaspireBasicComponents/Typography/TypographyTitle/index.tsx","components/AaspireBasicComponents/Typography/TypographyTitle/TypographyTitleView.react.tsx","components/AaspireBasicComponents/Typography/TypographyTitle/TypographyTitle.react.tsx","components/WhiteCard/WhiteCardView.react.tsx","components/WhiteCard/WhiteCard.react.tsx","components/AaspireBasicComponents/Typography/TypographyDescription/index.tsx","components/AaspireBasicComponents/Typography/TypographyDescription/TypographyDescriptionView.react.tsx","components/AaspireBasicComponents/Typography/TypographyDescription/TypographyDescription.react.tsx","components/WhiteCard/WhiteCard.module.scss","components/AaspireBasicComponents/Typography/TypographyTitle/TypographyTitle.module.scss","components/AaspireBasicComponents/Typography/TypographyDescription/TypographyDescription.module.scss","components/CreatorProfilePopover/CreatorProfilePopover.module.scss","components/CreatorProfilePopover/ContentCountMetadataLabel.react.tsx","components/CreatorProfilePopover/CreatorProfilePopoverView.react.tsx","components/CreatorProfilePopover/CreatorProfilePopover.react.tsx","components/CreatorProfilePopover/CreatorProfilePopoverUtil.tsx","routes/creatornotifications/CreatorNotifications.module.scss"],"names":["CreatorNotificationsStateActionTypes","REQUEST_TYPES","REQUEST_STATUS","NOTIFICATION_TYPES","approveRequest","a","reviewerUserId","requestId","RESTAPIClient","Request","approve","approveRequestResponse","error","console","log","denyRequest","deny","denyRequestResponse","markNotificationsAsSeen","notificationIds","Notification","markAsSeen","saveNotificationsResponse","CreatorNotificationBaseListItem","notification","actions","messageContent","avatarImageURL","avatarUser","dateInfo","Text","className","s","notificationListItemDate","getTimeSinceString","dateCreated","_seconds","toLowerCase","Item","notificationListItem","extra","Grid","notificationListItemGrid","Avatar","user","imageURL","fitParent","size","containerStyle","marginLeft","marginTop","marginBottom","marginRight","notificationListItemMessage","MissionContributorRequestListItem","didClickApproveRequest","didClickDenyRequest","notificationsProcessing","CreatorProfilePopover","creator","metadata","request","requester","firstName","lastName","to","missionId","mission","title","approveButton","type","onClick","disabled","indexOf","objectID","denyButton","PlaylistContributorRequestListItem","playlistId","playlist","RequestNotificationListItem","requestType","CreatorNotificationMissionContributorRequestResolvedListItem","status","thumbnailUrl","CreatorNotificationPlaylistContributorRequestResolvedListItem","RequestResolvedNotificationListItem","CreatorNotificationListItem","props","notificationType","CreatorNotificationsList","loading","itemLayout","loadMore","dataSource","notifications","bordered","locale","emptyText","image","Empty","PRESENTED_IMAGE_SIMPLE","description","renderItem","creatorNotificationsStateInit","initialState","creatorNotificationsReducer","state","action","START_NOTIFICATION_RESPONSE","notificationProcessing","END_NOTIFICATION_RESPONSE","filter","n","UPDATE_NOTIFICATIONS","shouldRefreshNotifications","SHOULD_REFRESH_NOTIFICATIONS","compose","withRouter","React","useReducer","currentUser","creatorNotificationsState","dispatch","refreshNotifications","getToShowForUser","userId","useEffect","notificationsListenerCallback","objects","detachNotificationsObserver","FirestoreRealtime","listenToMultipleDocuments","query","collections","NOTIFICATIONS","where","orderBy","callback","useCallback","message","placement","markNotificationsSeen","history","location","map","WhiteCard","subTitle","creatorNotificationsRoot","withDefaultBodyPadding","CreatorNotifications","useContext","AppContext","appState","creatorNotificationsData","authUser","pathname","matchParams","useState","isLoading","data","updateData","fetchData","uid","useFetchCreatorNotificationsData","match","params","LoadingView","currentCreator","getStyleWithMargin","withMargin","style","top","left","right","bottom","MarginType","ALL","margin","LEFT_AND_RIGHT","TOP_AND_BOTTOM","TOP","BOTTOM","LEFT","RIGHT","FontSize","FontColor","TypographyTitleType","TypographyTitleView","centered","color","restProps","styleObject","TypographyTitle","Title","classNames","children","WhiteCardView","smallSizeTitleAndSubtitle","customBodyPaddingValues","headerContainer","titleAndSubtitleAlignCenter","headerClassName","CARD_SUB_TITLE","CARD_TITLE","TypographyDescription","TypographyDescriptionType","SECONDARY_DESCRIPTION","PRIMARY_DESCRIPTION","whiteCardSubTitle","whiteCardBody","bodyPadding","bodyClassName","padding","TypographyDescriptionView","module","exports","ContentCountMetadataLabel","contentType","count","contentTypeString","creatorProfileStats","creatorProfileStatsTextNumber","CreatorProfilePopoverView","creatorNameInfo","useMemo","creatorProfileName","showCreatorRoleInfo","creatorDetails","company","creatorRoleInfo","creatorProfileRoleTitle","showCreatorProfileMetadata","creatorWithMetadata","numPlaylists","createdPlaylists","length","numVideos","uploadedResources","numMissions","contributedMissions","showCreatorBio","bio","creatorBio","creatorProfileBioContainer","popoverContent","popOverContent","profileHeaderRow","profileAvatarContainer","profileAvatar","profileHeaderTextContainer","creatorBioWrapper","span","profileInfoRow","creatorProfileFooter","statsDivider","overlayStyle","minWidth","maxWidth","borderRadius","content","profileLink","creatorUserId","Public","getWithMetadata","useFetchCreatorProfilePopoverData"],"mappings":"iJAUKA,E,gFCsCCC,EACkB,uBADlBA,EAEiB,sBAGjBC,EAEM,WAINC,EACa,kBADbA,EAEc,mBAGdC,EAAc,uCAAG,iCAAAC,EAAA,6DAASC,EAAT,EAASA,eAAgBC,EAAzB,EAAyBA,UAAzB,kBAEkBC,IAAcC,QAAQC,QAAQ,CACjEJ,iBACAC,cAJiB,cAEbI,EAFa,yBAOZ,CACLA,uBAAwBA,EACxBC,MAAO,OATU,uCAYnBC,QAAQC,IAAR,uCAZmB,kBAaZ,CACLH,uBAAwB,KACxBC,MAAM,EAAD,KAfY,yDAAH,sDAoBdG,EAAW,uCAAG,iCAAAV,EAAA,6DAASC,EAAT,EAASA,eAAgBC,EAAzB,EAAyBA,UAAzB,kBAEkBC,IAAcC,QAAQO,KAAK,CAC3DV,iBACAC,cAJc,cAEVU,EAFU,yBAOT,CACLA,oBAAqBA,EACrBL,MAAO,OATO,uCAYhBC,QAAQC,IAAR,uCAZgB,kBAaT,CACLG,oBAAqB,KACrBL,MAAM,EAAD,KAfS,yDAAH,sDAoBXM,EAAuB,uCAAG,+BAAAb,EAAA,6DAASc,EAAT,EAASA,gBAAT,kBAEYX,IAAcY,aAAaC,WACjE,CACEF,oBAJwB,cAEtBG,EAFsB,yBAOrB,CACLA,0BAA2BA,EAC3BV,MAAO,OATmB,uCAY5BC,QAAQC,IAAR,uCAZ4B,kBAarB,CACLQ,0BAA2B,KAC3BV,MAAM,EAAD,KAfqB,yDAAH,sD,qHCjDdW,EAvCyB,SAAC,GAM1B,IALbC,EAKY,EALZA,aACAC,EAIY,EAJZA,QACAC,EAGY,EAHZA,eACAC,EAEY,EAFZA,eACAC,EACY,EADZA,WAEMC,EACJ,kBAAC,IAAWC,KAAZ,CAAiBC,UAAWC,IAAEC,0BAC3BC,YAAmBV,EAAaW,YAAYC,UAAUC,eAG3D,OACE,kBAAC,IAAKC,KAAN,CACEP,UAAWC,IAAEO,qBACbd,QAASA,EACTe,MAAOX,GAEP,kBAACY,EAAA,EAAD,CAAMV,UAAWC,IAAEU,0BACjB,kBAACC,EAAA,EAAD,CACEC,KAAMjB,EAAiB,KAAOC,EAC9BiB,SAAUlB,EACVmB,WAAW,EACXC,KAAM,GACNC,eAAgB,CACdC,WAAY,OACZC,UAAW,OACXC,aAAc,OACdC,YAAa,SAGjB,kBAAC,IAAWtB,KAAZ,CAAiBC,UAAWC,IAAEqB,6BAC3B3B,MCzCL4B,EAAoC,SAAC,GAKpC,IAJL9B,EAII,EAJJA,aACA+B,EAGI,EAHJA,uBACAC,EAEI,EAFJA,oBACAC,EACI,EADJA,wBAEM/B,EACJ,6BACE,kBAACgC,EAAA,EAAD,CACEC,QAASnC,EAAaoC,SAASC,QAAQD,SAASE,WADlD,UAGMtC,EAAaoC,SAASC,QAAQD,SAASE,UAAUC,UAHvD,YAGoEvC,EAAaoC,SAASC,QAAQD,SAASE,UAAUE,WAEpH,0DACD,kBAAC,IAAD,CACEC,GAAE,0BAAqBzC,EAAaoC,SAASC,QAAQK,YADvD,UAEK1C,EAAaoC,SAASC,QAAQD,SAASO,QAAQC,SAGlDC,EACJ,kBAAC,IAAD,CACEC,KAAM,UACNC,QAAS,kBAAMhB,EAAuB/B,EAAaoC,SAASC,UAC5DW,SACEf,GACAA,EAAwBgB,QACtBjD,EAAaoC,SAASC,QAAQa,WAC3B,GAGN,WAGCC,EACJ,kBAAC,IAAD,CACEJ,QAAS,kBAAMf,EAAoBhC,EAAaoC,SAASC,UACzDW,SACEf,GACAA,EAAwBgB,QACtBjD,EAAaoC,SAASC,QAAQa,WAC3B,GAGN,QAGL,OACE,kBAAC,EAAD,CACElD,aAAcA,EACdC,QAAS,CAAC4C,EAAeM,GACzBjD,eAAgBA,EAChBE,WAAYJ,EAAaoC,SAASC,QAAQD,SAASE,UACnDnC,eAAe,MAKfiD,EAAqC,SAAC,GAKrC,IAJLpD,EAII,EAJJA,aACA+B,EAGI,EAHJA,uBACAC,EAEI,EAFJA,oBACAC,EACI,EADJA,wBAEM/B,EACJ,6BACE,kBAACgC,EAAA,EAAD,CACEC,QAASnC,EAAaoC,SAASC,QAAQD,SAASE,WADlD,UAGMtC,EAAaoC,SAASC,QAAQD,SAASE,UAAUC,UAHvD,YAGoEvC,EAAaoC,SAASC,QAAQD,SAASE,UAAUE,WAEpH,wDACD,kBAAC,IAAD,CACEC,GAAE,wBAAmBzC,EAAaoC,SAASC,QAAQgB,aADrD,UAEKrD,EAAaoC,SAASC,QAAQD,SAASkB,SAASV,SAGnDC,EACJ,kBAAC,IAAD,CACEC,KAAM,UACNC,QAAS,kBAAMhB,EAAuB/B,EAAaoC,SAASC,UAC5DW,SACEf,GACAA,EAAwBgB,QACtBjD,EAAaoC,SAASC,QAAQa,WAC3B,GAGN,WAGCC,EACJ,kBAAC,IAAD,CACEJ,QAAS,kBAAMf,EAAoBhC,EAAaoC,SAASC,UACzDW,SACEf,GACAA,EAAwBgB,QACtBjD,EAAaoC,SAASC,QAAQa,WAC3B,GAGN,QAGL,OACE,kBAAC,EAAD,CACElD,aAAcA,EACdC,QAAS,CAAC4C,EAAeM,GACzBjD,eAAgBA,EAChBE,WAAYJ,EAAaoC,SAASC,QAAQD,SAASE,UACnDnC,eAAe,MAmCNoD,EA9BqB,SAAC,GAK9B,IAJLvD,EAII,EAJJA,aACA+B,EAGI,EAHJA,uBACAC,EAEI,EAFJA,oBACAC,EACI,EADJA,wBAEA,OAAQjC,EAAaoC,SAASC,QAAQmB,aACpC,KAAK/E,EACH,OACE,kBAAC,EAAD,CACEuB,aAAcA,EACd+B,uBAAwBA,EACxBC,oBAAqBA,EACrBC,wBAAyBA,IAG/B,KAAKxD,EACH,OACE,kBAAC,EAAD,CACEuB,aAAcA,EACd+B,uBAAwBA,EACxBC,oBAAqBA,EACrBC,wBAAyBA,IAG/B,QACE,OAAO,gCC9IPwB,EAA+D,SAAC,GAE/D,IADLzD,EACI,EADJA,aAEME,EACJ,6BACG,wBACD,kBAAC,IAAD,CACEuC,GAAE,0BAAqBzC,EAAaoC,SAASC,QAAQD,SAASO,QAAQO,WADxE,UAEKlD,EAAaoC,SAASC,QAAQD,SAASO,QAAQC,QAJtD,eAMI5C,EAAaoC,SAASC,QAAQqB,SAAWhF,EACrC,WACA,SARR,MAYF,OACE,kBAAC,EAAD,CACEsB,aAAcA,EACdC,QAAS,GACTC,eAAgBA,EAChBE,WAAY,KACZD,eACEH,EAAaoC,SAASC,QAAQD,SAASO,QAAQgB,gBAMjDC,EAAgE,SAAC,GAEhE,IADL5D,EACI,EADJA,aAEME,EACJ,6BACG,wBACD,kBAAC,IAAD,CACEuC,GAAE,wBAAmBzC,EAAaoC,SAASC,QAAQD,SAASkB,SAASJ,WADvE,UAEKlD,EAAaoC,SAASC,QAAQD,SAASkB,SAASV,QAJvD,eAMI5C,EAAaoC,SAASC,QAAQqB,SAAWhF,EACrC,WACA,SARR,MAYF,OACE,kBAAC,EAAD,CACEsB,aAAcA,EACdC,QAAS,GACTC,eAAgBA,EAChBE,WAAY,KACZD,eACEH,EAAaoC,SAASC,QAAQD,SAASkB,SAASK,gBAyBzCE,EAnB6B,SAAC,GAAsB,IAApB7D,EAAmB,EAAnBA,aAC7C,OAAQA,EAAaoC,SAASC,QAAQmB,aACpC,KAAK/E,EACH,OACE,kBAAC,EAAD,CACEuB,aAAcA,IAGpB,KAAKvB,EACH,OACE,kBAAC,EAAD,CACEuB,aAAcA,IAGpB,QACE,OAAO,gCC5CE8D,EAtBsC,SAACC,GACpD,OAAQA,EAAM/D,aAAagE,kBACzB,KAAKrF,EACH,OACE,kBAAC,EAAD,CACEqB,aAAc+D,EAAM/D,aACpB+B,uBAAwBgC,EAAMhC,uBAC9BC,oBAAqB+B,EAAM/B,oBAC3BC,wBAAyB8B,EAAM9B,0BAGrC,KAAKtD,EACH,OACE,kBAAC,EAAD,CACEqB,aAAc+D,EAAM/D,eAG1B,QACE,OAAO,gCCSEiE,EA5BmC,SAACF,GACjD,OACE,kBAAC,IAAD,CACEG,SAAS,EACTC,WAAW,aACXC,SAAU,8BACVC,WAAYN,EAAMO,cAClBC,UAAQ,EACRC,OAAQ,CACNC,UACE,kBAAC,IAAD,CACEC,MAAOC,IAAMC,uBACbC,YAAY,4CAIlBC,WAAY,SAAA9E,GAAY,OACtB,kBAAC,EAAD,CACEA,aAAcA,EACd+B,uBAAwBgC,EAAMhC,uBAC9BC,oBAAqB+B,EAAM/B,oBAC3BC,wBAAyB8B,EAAM9B,8B,mBNtBpCzD,K,4CAAAA,E,4DAAAA,E,0DAAAA,E,uDAAAA,M,KAaL,IAAMuG,EAAgC,SACpCC,GAEA,OAAO,eACFA,EADL,CAEE/C,wBAAyB,MAIvBgD,EAA8B,SAClCC,EACAC,GAEA,OAAQA,EAAOrC,MACb,KAAKtE,EAAqC4G,4BACxC,OAAO,eACFF,EADL,CAEEjD,wBAAyBiD,EAAMjD,wBAAN,sBACjBiD,EAAMjD,yBADW,CACckD,EAAOE,yBAC1C,CAACF,EAAOE,0BAGhB,KAAK7G,EAAqC8G,0BACxC,OAAO,eACFJ,EADL,CAEEjD,wBAAyBiD,EAAMjD,wBAC3BiD,EAAMjD,wBAAwBsD,QAC5B,SAAAC,GAAC,OAAIA,IAAML,EAAOE,0BAEpB,KAGR,KAAK7G,EAAqCiH,qBACxC,OAAO,eACFP,EADL,CAEEZ,cAAea,EAAOb,cACtBoB,4BAA4B,IAEhC,KAAKlH,EAAqCmH,6BACxC,OAAO,eAAKT,EAAZ,CAAmBQ,4BAA4B,IACjD,QACE,OAAOR,I,iBO2GEU,cAAsBC,IAAtBD,EA5ImC,SAAC7B,GAAkB,IAAD,EACpB+B,IAAMC,WAClDd,EACA,CACEe,YAAajC,EAAMiC,YACnB1B,cAAeP,EAAMO,cACrBoB,4BAA4B,GAE9BX,GARgE,mBAC3DkB,EAD2D,KAChCC,EADgC,KAW5DC,EAAoB,uCAAG,4BAAAtH,EAAA,sEACCG,IAAcY,aAAawG,iBAAiB,CACtEC,OAAQtC,EAAMiC,YAAY9C,WAFD,OACrBoB,EADqB,OAI3B4B,EAAS,CACPpD,KAAMtE,EAAqCiH,qBAC3CnB,kBANyB,2CAAH,qDAU1BwB,IAAMQ,WAAU,WACdL,EAA0BP,4BACxBS,MACD,CAACF,EAA0BP,6BAE9B,IAAMa,EAAgC,SACpCC,GAEAA,GACEN,EAAS,CACPpD,KAAMtE,EAAqCmH,gCAIjDG,IAAMQ,WAAU,WACd,IAAMG,EACJ1C,EAAMiC,YAAY9C,UAClBwD,IAAkBC,0BAA0B,CAC1CC,MAAOF,IAAkBG,YAAYC,cAAcC,MACjD,iBACA,KACAhD,EAAMiC,YAAY9C,UAEjB6D,MAAM,aAAc,MAAM,GAC1BC,QAAQ,cAAe,QAC1BC,SAAUV,IAEd,OAAO,kBAAME,GAA+BA,OAC3C,CAAC1C,EAAMiC,YAAY9C,WAEtB,IAAMnB,EAAyB+D,IAAMoB,YAAN,uCAC7B,WAAM7E,GAAN,eAAAxD,EAAA,6DACEqH,EAAS,CACPpD,KAAMtE,EAAqC4G,4BAC3CC,uBAAwBhD,EAAQa,WAHpC,SAKuCtE,EAAe,CAClDE,eAAgBmH,EAA0BD,YAAY9C,SACtDnE,UAAWsD,EAAQa,WAPvB,YAKQ/D,EALR,QAU6BC,MAV7B,gBAWIY,IAAaZ,MAAM,CACjB+H,QAAS,QACTtC,YAAY,0DAAD,OAA4D1F,EAAuBC,OAC9FgI,UAAW,gBAEblB,EAAS,CACPpD,KAAMtE,EAAqC8G,0BAC3CD,uBAAwBhD,EAAQa,WAlBtC,wCAqBUmE,IArBV,4CAD6B,sDAyB7B,CAACtD,EAAMuD,QAASvD,EAAMwD,SAAUtB,EAA0BD,cAGtDhE,EAAsB8D,IAAMoB,YAAN,uCAC1B,WAAM7E,GAAN,eAAAxD,EAAA,6DACEqH,EAAS,CACPpD,KAAMtE,EAAqC4G,4BAC3CC,uBAAwBhD,EAAQa,WAHpC,SAMoC3D,EAAY,CAC5CT,eAAgBmH,EAA0BD,YAAY9C,SACtDnE,UAAWsD,EAAQa,WARvB,YAMQzD,EANR,QAW0BL,MAX1B,gBAYIY,IAAaZ,MAAM,CACjB+H,QAAS,QACTtC,YAAY,uDAAD,OAAyDpF,EAAoBL,OACxFgI,UAAW,gBAEblB,EAAS,CACPpD,KAAMtE,EAAqC8G,0BAC3CD,uBAAwBhD,EAAQa,WAnBtC,wCAsBUmE,IAtBV,4CAD0B,sDA0B1B,CAACtD,EAAMuD,QAASvD,EAAMwD,SAAUtB,EAA0BD,cAE5DF,IAAMQ,WAAU,WACdjH,QAAQC,IAAI2G,EAA0BhE,2BACrC,CAACgE,EAA0BhE,0BAC9B,IAAMoF,EAAwBvB,IAAMoB,YAAN,sBAAkB,4BAAArI,EAAA,6DACxCc,EAAkBsG,EAA0B3B,cAAckD,KAC9D,SAAAhC,GAAC,OAAIA,EAAEtC,YAFqC,SAIxCxD,EAAwB,CAAEC,oBAJc,2CAK7C,CAACsG,EAA0B3B,gBAM9B,OAJAwB,IAAMQ,WAAU,WACde,MACC,CAACA,IAGF,kBAACI,EAAA,EAAD,CACE7E,MAAM,gBACN8E,SAAS,qCACTnH,UAAWC,IAAEmH,yBACbC,wBAAsB,GAEtB,kBAAC,EAAD,CACEtD,cAAe2B,EAA0B3B,cACzCvC,uBAAwBA,EACxBC,oBAAqBA,EACrBC,wBACEgE,EAA0BhE,8BClIrB4F,EArB+B,SAAC9D,GAAkB,IAAD,EAC3C+B,IAAMgC,WAAWC,KAA7BC,EADuD,oBAExDC,EPLiC,SACvCC,EACAC,EACAC,GAC8B,IAAD,EACFtC,IAAMuC,SAAmC,CAClEC,WAAW,EACXhE,cAAe,KACflF,MAAO,OAJoB,mBACtBmJ,EADsB,KAChBC,EADgB,KAOvBC,EAAS,uCAAG,4BAAA5J,EAAA,+EAEcG,IAAcY,aAAawG,iBAAiB,CACtEC,OAAQ6B,EAASQ,MAHL,OAERpE,EAFQ,OAKdkE,EAAW,eACND,EADK,CAERjE,cAAeA,EACfgE,WAAW,KARC,gDAWdjJ,QAAQC,IAAR,sCACAkJ,EAAW,eACND,EADK,CAERD,WAAW,EACXlJ,MAAM,EAAD,MAfO,yDAAH,qDAwBf,OAJA0G,IAAMQ,WAAU,WACdmC,MACC,IAEIF,EO9B0BI,CAC/BX,EAASE,SACTnE,EAAMwD,SAASY,SACfpE,EAAM6E,MAAMC,QAGd,OAAIZ,EAAyBK,UACpB,kBAACQ,EAAA,EAAD,MAGL,kBAAC,EAAD,CACE9C,YAAagC,EAASe,eACtBzE,cAAe2D,EAAyB3D,cACxClF,MAAO6I,EAAyB7I,U,iCC5BxC,+CAEa4J,EAAqB,SAAC,GAWP,IAV1BC,EAUyB,EAVzBA,WACA1H,EASyB,EATzBA,KAUM2H,EAA6B,GADV,EAEoC3H,EAArD4H,WAFiB,MAEX,IAFW,IAEoC5H,EAA1C6H,YAFM,MAEC,IAFD,IAEoC7H,EAA9B8H,aAFN,MAEc,IAFd,IAEoC9H,EAAjB+H,cAFnB,MAE4B,IAF5B,EAKzB,OAAQL,GACN,KAAKM,IAAWC,IACdN,EAAMO,OAAN,UAAkBN,EAAlB,YAAyBE,EAAzB,YAAkCC,EAAlC,YAA4CF,EAA5C,KACA,MACF,KAAKG,IAAWG,eACdR,EAAMzH,WAAa2H,EACnBF,EAAMtH,YAAcyH,EACpB,MACF,KAAKE,IAAWI,eACdT,EAAMxH,UAAYyH,EAClBD,EAAMvH,aAAe2H,EACrB,MACF,KAAKC,IAAWK,IACdV,EAAMxH,UAAYyH,EAClB,MACF,KAAKI,IAAWM,OACdX,EAAMvH,aAAe2H,EACrB,MACF,KAAKC,IAAWO,KACdZ,EAAMzH,WAAa2H,EACnB,MACF,KAAKG,IAAWQ,MACdb,EAAMtH,YAAcyH,EAIxB,OAAOH,I,iCC5CF,IAAKK,EAUAS,EAMAC,E,+GAhBAV,K,UAAAA,E,gCAAAA,E,gCAAAA,E,UAAAA,E,YAAAA,E,cAAAA,E,iBAAAA,M,cAUAS,K,wBAAAA,E,0BAAAA,E,yBAAAA,M,cAMAC,K,yBAAAA,E,gCAAAA,E,uBAAAA,E,wBAAAA,M,+GCdAC,E,qFC8CGC,EA/B8B,SAACpG,GAAkB,IACtDjB,EAA+DiB,EAA/DjB,KAAMsH,EAAyDrG,EAAzDqG,SAAUC,EAA+CtG,EAA/CsG,MAAO9J,EAAwCwD,EAAxCxD,UAAW0I,EAA6BlF,EAA7BkF,WAAeqB,EADI,YACUvG,EADV,sDAGvDwG,EAAcvB,YAAmB,CACrCC,aACA1H,KAAM,CACJ4H,IAAK,OACLG,OAAQ,OACRF,KAAM,OACNC,MAAO,UAIX,OACE,0BAAM9I,UAAS,UAAKC,IAAEgK,iBAAmBtB,MAAOqB,GAC9C,kBAAC,IAAWE,MAAZ,iBACMH,EADN,CAEEpB,MAAO,CAAEO,OAAQ,GACjBlJ,UAAWmK,IAAW,eACjB5H,GAAO,GACV,CAAEsH,SAAUA,GAFO,eAGhBC,EAAQA,GAHQ,eAIhB9J,EAAYA,MAGhBwD,EAAM4G,YCxBAH,EAJ0B,SAACzG,GACxC,OAAO,kBAAC,EAAwBA,K,SFbtBmG,K,uBAAAA,E,8BAAAA,E,qCAAAA,E,oCAAAA,E,kCAAAA,M,2KG0GGU,EA7EwB,SAAC7G,GAAkB,IAEtDkF,EAIElF,EAJFkF,WACArB,EAGE7D,EAHF6D,uBACAiD,EAEE9G,EAFF8G,0BACAC,EACE/G,EADF+G,wBAEI5B,EAAQF,YAAmB,CAC/BC,aACA1H,KAAM,CACJ4H,IAAK,OACLG,OAAQ,OACRF,KAAM,MACNC,MAAO,SAIX,OACE,yBAAK9I,UAAS,UAAKC,IAAEiH,UAAP,YAAoB1D,EAAMxD,WAAa2I,MAAOA,IACxDnF,EAAMnB,OAASmB,EAAM2D,WACrB,yBACEnH,UAAWmK,IAAW,eACjBlK,IAAEuK,iBAAkB,GADJ,eAEhBvK,IAAE4J,SAAWrG,EAAMiH,6BACtBjH,EAAMkH,kBAIPlH,EAAMnB,OACL,kBAAC4H,EAAA,EAAD,CACEvB,WAAYM,IAAWM,OACvB/G,KACE+H,EACIX,IAAoBgB,eACpBhB,IAAoBiB,WAE1Bf,SAAUrG,EAAMiH,6BAEfjH,EAAMnB,OAKVmB,EAAM2D,UACL,kBAAC0D,EAAA,EAAD,CACEtI,KACE+H,EACIQ,IAA0BC,sBAC1BD,IAA0BE,oBAEhChL,UAAWC,IAAEgL,kBACbpB,SAAUrG,EAAMiH,6BAEfjH,EAAM2D,WAMf,yBACEnH,UAAWmK,IAAW,eACjBlK,IAAEiL,eAAgB,GADF,yBAEbjL,IAAEkL,YAFW,gBAEiB9D,GACpC7D,EAAM4H,eAERzC,MACE4B,GAA2B,CACzBc,QAAQ,GAAD,OAAKd,EAAwB3B,IAA7B,YAAoC2B,EAAwBzB,MAA5D,YAAqEyB,EAAwBxB,OAA7F,YAAuGwB,EAAwB1B,KAA/H,OAIVrF,EAAM4G,YC3EAlD,EAJoB,SAAC1D,GAClC,OAAO,kBAAC,EAAkBA,K,yGCtBhBsH,E,qFC6CGQ,EA9BoC,SAAC9H,GAAkB,IAC5DjB,EAA+DiB,EAA/DjB,KAAMsH,EAAyDrG,EAAzDqG,SAAUC,EAA+CtG,EAA/CsG,MAAOpB,EAAwClF,EAAxCkF,WAAY1I,EAA4BwD,EAA5BxD,UAAc+J,EADU,YACIvG,EADJ,sDAG7DwG,EAAcvB,YAAmB,CACrCC,aACA1H,KAAM,CACJ4H,IAAK,OACLG,OAAQ,OACRF,KAAM,OACNC,MAAO,UAIX,OACE,0BAAM9I,UAAWC,IAAE4K,sBAAuBlC,MAAOqB,GAC/C,kBAAC,IAAWjK,KAAZ,iBACMgK,EADN,CAEE/J,UAAWmK,IAAW,eACjB5H,GAAOiB,EAAMxD,WAChB,CAAE6J,SAAUA,GAFO,eAGhBC,EAAQA,GAHQ,eAIhB9J,EAAYA,MAGhBwD,EAAM4G,YCvBAS,EAJgC,SAACrH,GAC9C,OAAO,kBAAC,EAA8BA,K,SFb5BsH,K,gDAAAA,E,yCAAAA,E,6CAAAA,E,0CAAAA,M,0BGDZS,EAAOC,QAAU,CAAC,UAAY,6BAA6B,gBAAkB,mCAAmC,SAAW,4BAA4B,OAAS,0BAA0B,eAAiB,kCAAkC,kBAAoB,qCAAqC,cAAgB,iCAAiC,kBAAoB,qCAAqC,YAAc,iC,oBCA9ZD,EAAOC,QAAU,CAAC,gBAAkB,2C,oBCApCD,EAAOC,QAAU,CAAC,sBAAwB,uD,oBCA1CD,EAAOC,QAAU,CAAC,mBAAqB,kDAAkD,yBAA2B,wDAAwD,mBAAqB,kDAAkD,uBAAyB,sDAAsD,uBAAyB,sDAAsD,gBAAkB,+CAA+C,2BAA6B,0DAA0D,eAAiB,8CAA8C,iBAAmB,gDAAgD,YAAc,2CAA2C,mBAAqB,kDAAkD,wBAA0B,uDAAuD,qBAAuB,oDAAoD,yBAA2B,wDAAwD,eAAiB,8CAA8C,+BAAiC,8DAA8D,sBAAwB,qDAAqD,yBAA2B,wDAAwD,2BAA6B,0DAA0D,sBAAwB,qDAAqD,qBAAuB,oDAAoD,oBAAsB,mDAAmD,aAAe,4CAA4C,8BAAgC,6DAA6D,kBAAoB,iDAAiD,2BAA6B,0DAA0D,mBAAqB,kDAAkD,mBAAqB,kDAAkD,uBAAyB,wD,2LC2B5lEC,EAfoC,SAACjI,GAClD,IAL4BkI,EAAqBC,EAK3CC,GALsBF,EAM1BlI,EAAMkI,aANyCC,EAO/CnI,EAAMmI,QANkB,IAAVA,EAAT,UAA0BD,GAA1B,UAA6CA,EAA7C,MAQP,OACE,yBAAK1L,UAAWC,IAAE4L,qBAChB,0BAAM7L,UAAWC,IAAE6L,+BAChBtI,EAAMmI,OAAS,GACV,IACPC,ICiGQG,EAzGoC,SAACvI,GAClD,IAAMwI,EAAkBzG,IAAM0G,SAC5B,kBACE,yBAAKjM,UAAWC,IAAEiM,oBAAlB,UACM1I,EAAM5B,QAAQI,UADpB,YACiCwB,EAAM5B,QAAQK,aAGjD,CAACuB,EAAM5B,UAGHuK,EACJ3I,EAAM5B,QAAQwK,gBACd5I,EAAM5B,QAAQwK,eAAe/J,OAC7BmB,EAAM5B,QAAQwK,eAAeC,QACzBC,EAAkB/G,IAAM0G,SAC5B,kBACEE,GACE,yBAAKnM,UAAWC,IAAEsM,yBAAlB,UACM/I,EAAM5B,QAAQwK,eAAe/J,MADnC,eAC+CmB,EAAM5B,QAAQwK,eAAeC,YAGhF,CAACF,EAAqB3I,EAAM5B,UAGxB4K,EACJhJ,EAAMiJ,qBAAuBjJ,EAAMiJ,oBAAoB5K,SACnD6K,EAAeF,EACjBhJ,EAAMiJ,oBAAoB5K,SAAS8K,iBAAiBC,OACpD,EAEEC,EAAYL,EACdhJ,EAAMiJ,oBAAoB5K,SAASiL,kBAAkBF,OACrD,EAEEG,EAAcP,EAChBhJ,EAAMiJ,oBAAoB5K,SAASmL,oBAAoBJ,OACvD,EAEEK,EACJzJ,EAAM5B,QAAQwK,gBAAkB5I,EAAM5B,QAAQwK,eAAec,IACzDC,EAAa5H,IAAM0G,SACvB,kBACEgB,GACE,yBAAKjN,UAAWC,IAAEmN,4BACf5J,EAAM5B,QAAQwK,eAAec,OAGpC,CAACD,EAAgBzJ,EAAM5B,UAGnByL,EACJ,yBAAKrN,UAAWC,IAAEqN,gBAChB,yBAAKtN,UAAWC,IAAEsN,kBAChB,yBAAKvN,UAAWC,IAAEuN,wBAChB,kBAAC5M,EAAA,EAAD,CACEC,KAAM2C,EAAM5B,QACZb,WAAW,EACXC,KAAM,GACNhB,UAAWC,IAAEwN,iBAIjB,yBAAKzN,UAAWC,IAAEyN,4BACf1B,EACAM,IAGL,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKtM,UAAWC,IAAE0N,kBAAmBC,KAAM,IACxCT,IAGL,yBAAKnN,UAAWC,IAAE4N,gBAChB,yBAAK7N,UAAWC,IAAE6N,sBAChB,kBAAC,EAAD,CAA2BpC,YAAa,QAASC,MAAOkB,IAAc,IACtE,yBAAK7M,UAAWC,IAAE8N,cAAlB,KACA,kBAAC,EAAD,CACErC,YAAa,WACbC,MAAOe,IACN,IACH,yBAAK1M,UAAWC,IAAE8N,cAAlB,KACA,kBAAC,EAAD,CACErC,YAAa,aACbC,MAAOoB,OAOjB,OACE,kBAAC,IAAD,CACEiB,aAAc,CACZC,SAAU,QACVC,SAAU,QACVC,aAAc,QAEhBtH,UAAU,WACVuH,QAASf,GAET,yBAAKrN,UAAS,UAAKC,IAAEoO,YAAP,iBAAmC7K,EAAM4G,YC/E9CzI,EAtBgC,SAAC6B,GAAkB,IAAD,ECJvB,SAAC8K,GAAkC,IAAD,EAC/C/I,IAAMuC,SAAS,CACxCC,WAAW,EACX0E,oBAAqB,KACrB5N,MAAO,OAJiE,mBACnEmJ,EADmE,KAC7DC,EAD6D,KAOpEC,EAAS,uCAAG,4BAAA5J,EAAA,+EAEoBG,IAAc8P,OAAOC,gBACrDF,GAHY,OAER7B,EAFQ,OAMdxE,EAAW,eACND,EADK,CAERyE,sBACA1E,WAAW,KATC,gDAYdjJ,QAAQC,IAAR,0CACAkJ,EAAW,eACND,EADK,CAERD,WAAW,EACXlJ,MAAM,EAAD,MAhBO,yDAAH,qDAyBf,OAJA0G,IAAMQ,WAAU,WACdmC,MACC,IAEIF,EDvBHyG,CAAkCjL,EAAM5B,QAAQe,UAHlDoF,EAF6D,EAE7DA,UACA0E,EAH6D,EAG7DA,oBACA5N,EAJ6D,EAI7DA,MAGF,OAAK2E,EAAM5B,QAEAmG,EACF,8BAGL,kBAAC,EAAD,iBACMvE,EADN,CAEEiJ,oBAAqBA,EACrB5N,MAAOA,KARJ,gC,oBErBX0M,EAAOC,QAAU,CAAC,yBAA2B,uDAAuD,wBAA0B,sDAAsD,0BAA4B,wDAAwD,qBAAuB,mDAAmD,2BAA6B,yDAAyD,uBAAyB,qDAAqD,sBAAwB,oDAAoD,WAAa,yCAAyC,qBAAuB,mDAAmD,4BAA8B,0DAA0D,yBAA2B,uDAAuD,oCAAsC,kEAAkE,yBAA2B","file":"static/js/39.51935f5e.chunk.js","sourcesContent":["import * as DataTypes from \"data/types\";\nimport { CreatorsHubDashboardStateActionTypes } from \"routes/creatorshub/CreatorsHubReducer\";\n\ninterface CreatorNotificationsState {\n  currentUser: DataTypes.User;\n  notifications: Array<DataTypes.Notification>;\n  shouldRefreshNotifications: boolean;\n  notificationsProcessing?: Array<any>;\n}\n\nenum CreatorNotificationsStateActionTypes {\n  UPDATE_NOTIFICATIONS = \"UPDATE_NOTIFICATIONS\",\n  SHOULD_REFRESH_NOTIFICATIONS = \"SHOULD_REFRESH_NOTIFICATIONS\",\n  START_NOTIFICATION_RESPONSE = \"START_NOTIFICATION_RESPONSE\",\n  END_NOTIFICATION_RESPONSE = \"END_NOTIFICATION_RESPONSE\",\n}\n\ninterface CreatorNotificationsStateAction {\n  type: CreatorNotificationsStateActionTypes;\n  notifications?: Array<DataTypes.Notification>;\n  notificationProcessing?: any;\n}\n\nconst creatorNotificationsStateInit = (\n  initialState: CreatorNotificationsState,\n): CreatorNotificationsState => {\n  return {\n    ...initialState,\n    notificationsProcessing: [],\n  };\n};\n\nconst creatorNotificationsReducer = (\n  state: CreatorNotificationsState,\n  action: CreatorNotificationsStateAction,\n): CreatorNotificationsState => {\n  switch (action.type) {\n    case CreatorNotificationsStateActionTypes.START_NOTIFICATION_RESPONSE:\n      return {\n        ...state,\n        notificationsProcessing: state.notificationsProcessing\n          ? [...state.notificationsProcessing, action.notificationProcessing]\n          : [action.notificationProcessing],\n      };\n\n    case CreatorNotificationsStateActionTypes.END_NOTIFICATION_RESPONSE:\n      return {\n        ...state,\n        notificationsProcessing: state.notificationsProcessing\n          ? state.notificationsProcessing.filter(\n              n => n !== action.notificationProcessing,\n            )\n          : [],\n      };\n\n    case CreatorNotificationsStateActionTypes.UPDATE_NOTIFICATIONS:\n      return {\n        ...state,\n        notifications: action.notifications,\n        shouldRefreshNotifications: false,\n      };\n    case CreatorNotificationsStateActionTypes.SHOULD_REFRESH_NOTIFICATIONS:\n      return { ...state, shouldRefreshNotifications: true };\n    default:\n      return state;\n  }\n};\n\nexport {\n  creatorNotificationsStateInit,\n  creatorNotificationsReducer,\n  CreatorNotificationsStateActionTypes,\n};\n","import * as DataTypes from \"data/types\";\nimport React from \"react\";\nimport RESTAPIClient from \"RESTAPIClient\";\n\ninterface CreatorNotificationsData {\n  isLoading: boolean;\n  notifications: Array<DataTypes.Notification>;\n  error?: Error;\n}\n\nconst useFetchCreatorNotificationsData = (\n  authUser,\n  pathname,\n  matchParams,\n): CreatorNotificationsData => {\n  const [data, updateData] = React.useState<CreatorNotificationsData>({\n    isLoading: true,\n    notifications: null,\n    error: null,\n  });\n\n  const fetchData = async (): Promise<void> => {\n    try {\n      const notifications = await RESTAPIClient.Notification.getToShowForUser({\n        userId: authUser.uid,\n      });\n      updateData({\n        ...data,\n        notifications: notifications,\n        isLoading: false,\n      });\n    } catch (error) {\n      console.log(`RouteFetchDataError: ${error}`);\n      updateData({\n        ...data,\n        isLoading: false,\n        error: error,\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n\n  return data;\n};\n\nconst REQUEST_TYPES = {\n  PLAYLIST_CONTRIBUTOR: \"PLAYLIST_CONTRIBUTOR\",\n  MISSION_CONTRIBUTOR: \"MISSION_CONTRIBUTOR\",\n};\n\nconst REQUEST_STATUS = {\n  PENDING_APPROVAL: \"PENDING_APPROVAL\",\n  APPROVED: \"APPROVED\",\n  DENIED: \"DENIED\",\n};\n\nconst NOTIFICATION_TYPES = {\n  PENDING_REQUEST: \"PENDING_REQUEST\",\n  RESOLVED_REQUEST: \"RESOLVED_REQUEST\",\n};\n\nconst approveRequest = async ({ reviewerUserId, requestId }) => {\n  try {\n    const approveRequestResponse = await RESTAPIClient.Request.approve({\n      reviewerUserId,\n      requestId,\n    });\n\n    return {\n      approveRequestResponse: approveRequestResponse,\n      error: null,\n    };\n  } catch (error) {\n    console.log(`RouteSubmitDataError: ${error}`);\n    return {\n      approveRequestResponse: null,\n      error: error,\n    };\n  }\n};\n\nconst denyRequest = async ({ reviewerUserId, requestId }) => {\n  try {\n    const denyRequestResponse = await RESTAPIClient.Request.deny({\n      reviewerUserId,\n      requestId,\n    });\n\n    return {\n      denyRequestResponse: denyRequestResponse,\n      error: null,\n    };\n  } catch (error) {\n    console.log(`RouteSubmitDataError: ${error}`);\n    return {\n      denyRequestResponse: null,\n      error: error,\n    };\n  }\n};\n\nconst markNotificationsAsSeen = async ({ notificationIds }) => {\n  try {\n    const saveNotificationsResponse = await RESTAPIClient.Notification.markAsSeen(\n      {\n        notificationIds,\n      },\n    );\n    return {\n      saveNotificationsResponse: saveNotificationsResponse,\n      error: null,\n    };\n  } catch (error) {\n    console.log(`RouteSubmitDataError: ${error}`);\n    return {\n      saveNotificationsResponse: null,\n      error: error,\n    };\n  }\n};\n\nexport {\n  useFetchCreatorNotificationsData,\n  REQUEST_TYPES,\n  NOTIFICATION_TYPES,\n  REQUEST_STATUS,\n  approveRequest,\n  denyRequest,\n  markNotificationsAsSeen,\n};\n","import { List, Typography } from \"antd\";\nimport Avatar from \"components/Avatar\";\nimport React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport s from \"../CreatorNotifications.module.scss\";\nimport { getTimeSinceString } from \"utilities\";\nimport * as DataTypes from \"data/types\";\n\ninterface Params {\n  notification: DataTypes.Notification | any;\n  actions: Array<Object>;\n  messageContent: Object;\n  avatarImageURL: string;\n  avatarUser: DataTypes.User;\n}\n\nconst CreatorNotificationBaseListItem = ({\n  notification,\n  actions,\n  messageContent,\n  avatarImageURL,\n  avatarUser,\n}: Params) => {\n  const dateInfo = (\n    <Typography.Text className={s.notificationListItemDate}>\n      {getTimeSinceString(notification.dateCreated._seconds).toLowerCase()}\n    </Typography.Text>\n  );\n  return (\n    <List.Item\n      className={s.notificationListItem}\n      actions={actions}\n      extra={dateInfo}\n    >\n      <Grid className={s.notificationListItemGrid}>\n        <Avatar\n          user={avatarImageURL ? null : avatarUser}\n          imageURL={avatarImageURL}\n          fitParent={true}\n          size={50}\n          containerStyle={{\n            marginLeft: \"10px\",\n            marginTop: \"20px\",\n            marginBottom: \"20px\",\n            marginRight: \"0px\",\n          }}\n        />\n        <Typography.Text className={s.notificationListItemMessage}>\n          {messageContent}\n        </Typography.Text>\n      </Grid>\n    </List.Item>\n  );\n};\n\nexport default CreatorNotificationBaseListItem;\n","import { Button } from \"antd\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { REQUEST_TYPES } from \"../CreatorNotificationsUtil\";\nimport CreatorProfilePopover from \"components/CreatorProfilePopover\";\nimport CreatorNotificationBaseListItem from \"./CreatorNotificationBaseListItem.react\";\n\nconst MissionContributorRequestListItem = ({\n  notification,\n  didClickApproveRequest,\n  didClickDenyRequest,\n  notificationsProcessing,\n}) => {\n  const messageContent = (\n    <div>\n      <CreatorProfilePopover\n        creator={notification.metadata.request.metadata.requester}\n      >\n        {`${notification.metadata.request.metadata.requester.firstName} ${notification.metadata.request.metadata.requester.lastName}`}\n      </CreatorProfilePopover>\n      {\" requested to become a contributor to your collection: \"}\n      <Link\n        to={`/editcollection/${notification.metadata.request.missionId}`}\n      >{`${notification.metadata.request.metadata.mission.title}`}</Link>\n    </div>\n  );\n  const approveButton = (\n    <Button\n      type={\"primary\"}\n      onClick={() => didClickApproveRequest(notification.metadata.request)}\n      disabled={\n        notificationsProcessing &&\n        notificationsProcessing.indexOf(\n          notification.metadata.request.objectID,\n        ) >= 0\n      }\n    >\n      {\"Approve\"}\n    </Button>\n  );\n  const denyButton = (\n    <Button\n      onClick={() => didClickDenyRequest(notification.metadata.request)}\n      disabled={\n        notificationsProcessing &&\n        notificationsProcessing.indexOf(\n          notification.metadata.request.objectID,\n        ) >= 0\n      }\n    >\n      {\"Deny\"}\n    </Button>\n  );\n  return (\n    <CreatorNotificationBaseListItem\n      notification={notification}\n      actions={[approveButton, denyButton]}\n      messageContent={messageContent}\n      avatarUser={notification.metadata.request.metadata.requester}\n      avatarImageURL=\"\"\n    />\n  );\n};\n\nconst PlaylistContributorRequestListItem = ({\n  notification,\n  didClickApproveRequest,\n  didClickDenyRequest,\n  notificationsProcessing,\n}) => {\n  const messageContent = (\n    <div>\n      <CreatorProfilePopover\n        creator={notification.metadata.request.metadata.requester}\n      >\n        {`${notification.metadata.request.metadata.requester.firstName} ${notification.metadata.request.metadata.requester.lastName}`}\n      </CreatorProfilePopover>\n      {\" requested to become a contributor to your playlist: \"}\n      <Link\n        to={`/editplaylist/${notification.metadata.request.playlistId}`}\n      >{`${notification.metadata.request.metadata.playlist.title}`}</Link>\n    </div>\n  );\n  const approveButton = (\n    <Button\n      type={\"primary\"}\n      onClick={() => didClickApproveRequest(notification.metadata.request)}\n      disabled={\n        notificationsProcessing &&\n        notificationsProcessing.indexOf(\n          notification.metadata.request.objectID,\n        ) >= 0\n      }\n    >\n      {\"Approve\"}\n    </Button>\n  );\n  const denyButton = (\n    <Button\n      onClick={() => didClickDenyRequest(notification.metadata.request)}\n      disabled={\n        notificationsProcessing &&\n        notificationsProcessing.indexOf(\n          notification.metadata.request.objectID,\n        ) >= 0\n      }\n    >\n      {\"Deny\"}\n    </Button>\n  );\n  return (\n    <CreatorNotificationBaseListItem\n      notification={notification}\n      actions={[approveButton, denyButton]}\n      messageContent={messageContent}\n      avatarUser={notification.metadata.request.metadata.requester}\n      avatarImageURL=\"\"\n    />\n  );\n};\n\nconst RequestNotificationListItem = ({\n  notification,\n  didClickApproveRequest,\n  didClickDenyRequest,\n  notificationsProcessing,\n}) => {\n  switch (notification.metadata.request.requestType) {\n    case REQUEST_TYPES.MISSION_CONTRIBUTOR:\n      return (\n        <MissionContributorRequestListItem\n          notification={notification}\n          didClickApproveRequest={didClickApproveRequest}\n          didClickDenyRequest={didClickDenyRequest}\n          notificationsProcessing={notificationsProcessing}\n        />\n      );\n    case REQUEST_TYPES.PLAYLIST_CONTRIBUTOR:\n      return (\n        <PlaylistContributorRequestListItem\n          notification={notification}\n          didClickApproveRequest={didClickApproveRequest}\n          didClickDenyRequest={didClickDenyRequest}\n          notificationsProcessing={notificationsProcessing}\n        />\n      );\n    default:\n      return <div></div>;\n  }\n};\n\nexport default RequestNotificationListItem;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { REQUEST_STATUS, REQUEST_TYPES } from \"../CreatorNotificationsUtil\";\nimport CreatorNotificationBaseListItem from \"./CreatorNotificationBaseListItem.react\";\n\nconst CreatorNotificationMissionContributorRequestResolvedListItem = ({\n  notification,\n}) => {\n  const messageContent = (\n    <div>\n      {\"Your request to join \"}\n      <Link\n        to={`/editcollection/${notification.metadata.request.metadata.mission.objectID}`}\n      >{`${notification.metadata.request.metadata.mission.title}`}</Link>\n      {` was ${\n        notification.metadata.request.status === REQUEST_STATUS.APPROVED\n          ? \"approved\"\n          : \"denied\"\n        }.`}\n    </div>\n  );\n  return (\n    <CreatorNotificationBaseListItem\n      notification={notification}\n      actions={[]}\n      messageContent={messageContent}\n      avatarUser={null}\n      avatarImageURL={\n        notification.metadata.request.metadata.mission.thumbnailUrl\n      }\n    />\n  );\n};\n\nconst CreatorNotificationPlaylistContributorRequestResolvedListItem = ({\n  notification,\n}) => {\n  const messageContent = (\n    <div>\n      {\"Your request to join \"}\n      <Link\n        to={`/editplaylist/${notification.metadata.request.metadata.playlist.objectID}`}\n      >{`${notification.metadata.request.metadata.playlist.title}`}</Link>\n      {` was ${\n        notification.metadata.request.status === REQUEST_STATUS.APPROVED\n          ? \"approved\"\n          : \"denied\"\n        }.`}\n    </div>\n  );\n  return (\n    <CreatorNotificationBaseListItem\n      notification={notification}\n      actions={[]}\n      messageContent={messageContent}\n      avatarUser={null}\n      avatarImageURL={\n        notification.metadata.request.metadata.playlist.thumbnailUrl\n      }\n    />\n  );\n};\n\nconst RequestResolvedNotificationListItem = ({ notification }) => {\n  switch (notification.metadata.request.requestType) {\n    case REQUEST_TYPES.MISSION_CONTRIBUTOR:\n      return (\n        <CreatorNotificationMissionContributorRequestResolvedListItem\n          notification={notification}\n        />\n      );\n    case REQUEST_TYPES.PLAYLIST_CONTRIBUTOR:\n      return (\n        <CreatorNotificationPlaylistContributorRequestResolvedListItem\n          notification={notification}\n        />\n      );\n    default:\n      return <div></div>;\n  }\n};\n\nexport default RequestResolvedNotificationListItem;\n","import React from \"react\";\nimport RequestNotificationListItem from \"./CreatorNotificationListItems/RequestNotificationListItem.react\";\nimport RequestResolvedNotificationListItem from \"./CreatorNotificationListItems/RequestResolvedNotificationListItem.react\";\nimport { NOTIFICATION_TYPES } from \"./CreatorNotificationsUtil\";\n\ninterface Props {\n  notification: any;\n  didClickApproveRequest: (request: Object) => void;\n  didClickDenyRequest: (request: Object) => void;\n  notificationsProcessing?: Array<string>;\n}\n\nconst CreatorNotificationListItem: React.FC<Props> = (props: Props) => {\n  switch (props.notification.notificationType) {\n    case NOTIFICATION_TYPES.PENDING_REQUEST:\n      return (\n        <RequestNotificationListItem\n          notification={props.notification}\n          didClickApproveRequest={props.didClickApproveRequest}\n          didClickDenyRequest={props.didClickDenyRequest}\n          notificationsProcessing={props.notificationsProcessing}\n        />\n      );\n    case NOTIFICATION_TYPES.RESOLVED_REQUEST:\n      return (\n        <RequestResolvedNotificationListItem\n          notification={props.notification}\n        />\n      );\n    default:\n      return <div></div>;\n  }\n};\n\nexport default CreatorNotificationListItem;\n","import { List, Empty } from \"antd\";\nimport React from \"react\";\nimport CreatorNotificationListItem from \"./CreatorNotificationListItem.react\";\n\ninterface Props {\n  notifications: Array<Object>;\n  didClickApproveRequest: (request: Object) => void;\n  didClickDenyRequest: (request: Object) => void;\n  notificationsProcessing?: Array<string>;\n}\n\nconst CreatorNotificationsList: React.FC<Props> = (props: Props) => {\n  return (\n    <List\n      loading={false}\n      itemLayout=\"horizontal\"\n      loadMore={<div />}\n      dataSource={props.notifications}\n      bordered\n      locale={{\n        emptyText: (\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n            description=\"There are no notifications for you yet\"\n          />\n        ),\n      }}\n      renderItem={notification => (\n        <CreatorNotificationListItem\n          notification={notification}\n          didClickApproveRequest={props.didClickApproveRequest}\n          didClickDenyRequest={props.didClickDenyRequest}\n          notificationsProcessing={props.notificationsProcessing}\n        />\n      )}\n    />\n  );\n};\n\nexport default CreatorNotificationsList;\n","import { Card, notification, PageHeader, Typography } from \"antd\";\nimport * as DataTypes from \"data/types\";\nimport React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { compose } from \"recompose\";\nimport { Grid } from \"semantic-ui-react\";\nimport { History, Location } from \"history\";\nimport s from \"./CreatorNotifications.module.scss\";\nimport CreatorNotificationsList from \"./CreatorNotificationsList.react\";\nimport {\n  creatorNotificationsReducer,\n  creatorNotificationsStateInit,\n  CreatorNotificationsStateActionTypes,\n} from \"./CreatorNotificationsReducer\";\nimport {\n  approveRequest,\n  denyRequest,\n  markNotificationsAsSeen,\n} from \"./CreatorNotificationsUtil\";\nimport { FirestoreRealtime } from \"FirebaseClient\";\nimport RESTAPIClient from \"RESTAPIClient\";\nimport WhiteCard from \"components/WhiteCard\";\n\ninterface Props {\n  currentUser: DataTypes.Creator;\n  notifications: Array<DataTypes.Notification>;\n  history?: History;\n  location?: Location;\n  error?: Error;\n}\n\nconst CreatorNotificationsView: React.FC<Props> = (props: Props) => {\n  const [creatorNotificationsState, dispatch] = React.useReducer(\n    creatorNotificationsReducer,\n    {\n      currentUser: props.currentUser,\n      notifications: props.notifications,\n      shouldRefreshNotifications: false,\n    },\n    creatorNotificationsStateInit,\n  );\n\n  const refreshNotifications = async () => {\n    const notifications = await RESTAPIClient.Notification.getToShowForUser({\n      userId: props.currentUser.objectID,\n    });\n    dispatch({\n      type: CreatorNotificationsStateActionTypes.UPDATE_NOTIFICATIONS,\n      notifications,\n    });\n  };\n\n  React.useEffect(() => {\n    creatorNotificationsState.shouldRefreshNotifications &&\n      refreshNotifications();\n  }, [creatorNotificationsState.shouldRefreshNotifications]);\n\n  const notificationsListenerCallback = (\n    objects: Array<DataTypes.DataModelObject>,\n  ) => {\n    objects &&\n      dispatch({\n        type: CreatorNotificationsStateActionTypes.SHOULD_REFRESH_NOTIFICATIONS,\n      });\n  };\n\n  React.useEffect(() => {\n    const detachNotificationsObserver =\n      props.currentUser.objectID &&\n      FirestoreRealtime.listenToMultipleDocuments({\n        query: FirestoreRealtime.collections.NOTIFICATIONS.where(\n          \"receiverUserId\",\n          \"==\",\n          props.currentUser.objectID,\n        )\n          .where(\"shouldShow\", \"==\", true)\n          .orderBy(\"dateCreated\", \"desc\"),\n        callback: notificationsListenerCallback,\n      });\n    return () => detachNotificationsObserver && detachNotificationsObserver();\n  }, [props.currentUser.objectID]);\n\n  const didClickApproveRequest = React.useCallback(\n    async request => {\n      dispatch({\n        type: CreatorNotificationsStateActionTypes.START_NOTIFICATION_RESPONSE,\n        notificationProcessing: request.objectID,\n      });\n      const approveRequestResponse = await approveRequest({\n        reviewerUserId: creatorNotificationsState.currentUser.objectID,\n        requestId: request.objectID,\n      });\n\n      if (approveRequestResponse.error) {\n        notification.error({\n          message: \"Error\",\n          description: `An error occurred while trying to approve the request: ${approveRequestResponse.error}`,\n          placement: \"bottomRight\",\n        });\n        dispatch({\n          type: CreatorNotificationsStateActionTypes.END_NOTIFICATION_RESPONSE,\n          notificationProcessing: request.objectID,\n        });\n      } else {\n        await markNotificationsSeen();\n      }\n    },\n    [props.history, props.location, creatorNotificationsState.currentUser],\n  );\n\n  const didClickDenyRequest = React.useCallback(\n    async request => {\n      dispatch({\n        type: CreatorNotificationsStateActionTypes.START_NOTIFICATION_RESPONSE,\n        notificationProcessing: request.objectID,\n      });\n\n      const denyRequestResponse = await denyRequest({\n        reviewerUserId: creatorNotificationsState.currentUser.objectID,\n        requestId: request.objectID,\n      });\n\n      if (denyRequestResponse.error) {\n        notification.error({\n          message: \"Error\",\n          description: `An error occurred while trying to deny the request: ${denyRequestResponse.error}`,\n          placement: \"bottomRight\",\n        });\n        dispatch({\n          type: CreatorNotificationsStateActionTypes.END_NOTIFICATION_RESPONSE,\n          notificationProcessing: request.objectID,\n        });\n      } else {\n        await markNotificationsSeen();\n      }\n    },\n    [props.history, props.location, creatorNotificationsState.currentUser],\n  );\n  React.useEffect(() => {\n    console.log(creatorNotificationsState.notificationsProcessing);\n  }, [creatorNotificationsState.notificationsProcessing]);\n  const markNotificationsSeen = React.useCallback(async () => {\n    const notificationIds = creatorNotificationsState.notifications.map(\n      n => n.objectID,\n    );\n    await markNotificationsAsSeen({ notificationIds });\n  }, [creatorNotificationsState.notifications]);\n\n  React.useEffect(() => {\n    markNotificationsSeen();\n  }, [markNotificationsSeen]);\n\n  return (\n    <WhiteCard\n      title=\"Notifications\"\n      subTitle=\"Notifications and requests for me.\"\n      className={s.creatorNotificationsRoot}\n      withDefaultBodyPadding\n    >\n      <CreatorNotificationsList\n        notifications={creatorNotificationsState.notifications}\n        didClickApproveRequest={didClickApproveRequest}\n        didClickDenyRequest={didClickDenyRequest}\n        notificationsProcessing={\n          creatorNotificationsState.notificationsProcessing\n        }\n      />\n    </WhiteCard >\n  );\n};\n\nexport default compose<Props, Props>(withRouter)(CreatorNotificationsView);\n","import { AppContext } from \"App\";\nimport React from \"react\";\nimport { match } from \"react-router-dom\";\nimport { Location } from \"history\";\nimport LoadingView from \"components/Views/LoadingView\";\nimport { useFetchCreatorNotificationsData } from \"./CreatorNotificationsUtil\";\nimport CreatorNotificationsView from \"./CreatorNotificationsView.react\";\n\ninterface Props {\n  location?: Location;\n  match?: match;\n}\n\nconst CreatorNotifications: React.FC<Props> = (props: Props) => {\n  const [appState] = React.useContext(AppContext);\n  const creatorNotificationsData = useFetchCreatorNotificationsData(\n    appState.authUser,\n    props.location.pathname,\n    props.match.params,\n  );\n\n  if (creatorNotificationsData.isLoading) {\n    return <LoadingView />;\n  } else {\n    return (\n      <CreatorNotificationsView\n        currentUser={appState.currentCreator}\n        notifications={creatorNotificationsData.notifications}\n        error={creatorNotificationsData.error}\n      />\n    );\n  }\n};\n\nexport default CreatorNotifications;\n","import { MarginType } from \"data/styleTypes\";\n\nexport const getStyleWithMargin = ({\n  withMargin,\n  size,\n}: {\n  withMargin: MarginType;\n  size: {\n    top: string;\n    left: string;\n    right: string;\n    bottom: string;\n  };\n}): React.CSSProperties => {\n  const style: React.CSSProperties = {};\n  const { top = \"0\", left = \"0\", right = \"0\", bottom = \"0\" } = size;\n\n  // withMargin handling\n  switch (withMargin) {\n    case MarginType.ALL:\n      style.margin = `${top} ${right} ${bottom} ${left} `;\n      break;\n    case MarginType.LEFT_AND_RIGHT:\n      style.marginLeft = left;\n      style.marginRight = right;\n      break;\n    case MarginType.TOP_AND_BOTTOM:\n      style.marginTop = top;\n      style.marginBottom = bottom;\n      break;\n    case MarginType.TOP:\n      style.marginTop = top;\n      break;\n    case MarginType.BOTTOM:\n      style.marginBottom = bottom;\n      break;\n    case MarginType.LEFT:\n      style.marginLeft = left;\n      break;\n    case MarginType.RIGHT:\n      style.marginRight = right;\n      break;\n  }\n\n  return style;\n};\n","export enum MarginType {\n  ALL = \"ALL\",\n  LEFT_AND_RIGHT = \"LEFT_AND_RIGHT\",\n  TOP_AND_BOTTOM = \"TOP_AND_BOTTOM\",\n  TOP = \"TOP\",\n  LEFT = \"LEFT\",\n  RIGHT = \"RIGHT\",\n  BOTTOM = \"BOTTOM\",\n}\n\nexport enum FontSize {\n  SMALL = \"fontSize__small\",\n  MEDIUM = \"fontSize__medium\",\n  LARGE = \"fontSize__large\",\n}\n\nexport enum FontColor {\n  BLACK = \"fontColor__black\",\n  DARK_GREY = \"fontColor__darkGrey\",\n  GREY = \"fontColor__grey\",\n  BLUE = \"fontColor__blue\",\n}\n","export { default } from \"./TypographyTitle.react\";\n\nexport enum TypographyTitleType {\n  CARD_TITLE = \"cardTitle\",\n  CARD_SUB_TITLE = \"cardSubTitle\",\n  CARD_SUB_SUB_TITLE = \"cardSubSubTitle\",\n  PAGE_HEADER_TITLE = \"pageHeaderTitle\",\n  SECONDARY_TITLE = \"secondaryTitle\",\n}\n","import React from \"react\";\nimport { Typography } from \"antd\";\nimport s from \"./TypographyTitle.module.scss\";\nimport { TypographyTitleType } from \".\";\nimport classNames from \"classnames\";\nimport { MarginType } from \"data/styleTypes\";\nimport { getStyleWithMargin } from \"utilities/styleUtils\";\n\ninterface Props {\n  type: TypographyTitleType;\n  children: React.ReactNode;\n  centered?: boolean;\n  color?: \"blue\" | \"purple\" | \"white\";\n  className?: string;\n  withMargin?: MarginType;\n}\n\nconst TypographyTitleView: React.FC<Props> = (props: Props) => {\n  const { type, centered, color, className, withMargin, ...restProps } = props;\n\n  const styleObject = getStyleWithMargin({\n    withMargin,\n    size: {\n      top: \"1rem\",\n      bottom: \"1rem\",\n      left: \"1rem\",\n      right: \"1rem\",\n    },\n  });\n\n  return (\n    <span className={`${s.TypographyTitle}`} style={styleObject}>\n      <Typography.Title\n        {...restProps}\n        style={{ margin: 0 }}\n        className={classNames(\n          { [type]: true },\n          { centered: centered },\n          { [color]: color },\n          { [className]: className },\n        )}\n      >\n        {props.children}\n      </Typography.Title>\n    </span>\n  );\n};\n\nexport default TypographyTitleView;\n","import React from \"react\";\nimport TypographyTitleView from \"./TypographyTitleView.react\";\nimport { TypographyTitleType } from \".\";\nimport { MarginType } from \"data/styleTypes\";\n\ninterface Props {\n  type: TypographyTitleType;\n  children: React.ReactNode;\n  centered?: boolean;\n  color?: \"blue\" | \"purple\" | \"white\";\n  className?: string;\n  withMargin?: MarginType;\n}\n\nconst TypographyTitle: React.FC<Props> = (props: Props) => {\n  return <TypographyTitleView {...props} />;\n};\n\nexport default TypographyTitle;\n","import React, { ReactNode } from \"react\";\nimport s from \"./WhiteCard.module.scss\";\nimport TypographyTitle, {\n  TypographyTitleType,\n} from \"components/AaspireBasicComponents/Typography/TypographyTitle\";\nimport TypographyDescription, {\n  TypographyDescriptionType,\n} from \"components/AaspireBasicComponents/Typography/TypographyDescription\";\nimport classNames from \"classnames\";\nimport { MarginType } from \"data/styleTypes\";\nimport { getStyleWithMargin } from \"utilities/styleUtils\";\n\ninterface Props {\n  title?: string | Element | ReactNode;\n  subTitle?: string;\n  children: React.ReactNode;\n  className?: string;\n  withMargin?: MarginType;\n  titleAndSubtitleAlignCenter?: boolean;\n  withDefaultBodyPadding?: boolean;\n  smallSizeTitleAndSubtitle?: boolean;\n  customBodyPaddingValues?: {\n    left: string;\n    right: string;\n    bottom: string;\n    top: string;\n  };\n  headerClassName?: string;\n  bodyClassName?: string;\n}\n\nconst WhiteCardView: React.FC<Props> = (props: Props) => {\n  const {\n    withMargin,\n    withDefaultBodyPadding,\n    smallSizeTitleAndSubtitle,\n    customBodyPaddingValues,\n  } = props;\n  const style = getStyleWithMargin({\n    withMargin,\n    size: {\n      top: \"30px\",\n      bottom: \"30px\",\n      left: \"4vh\",\n      right: \"4vh\",\n    },\n  });\n\n  return (\n    <div className={`${s.WhiteCard} ${props.className}`} style={style}>\n      {(props.title || props.subTitle) && (\n        <div\n          className={classNames(\n            { [s.headerContainer]: true },\n            { [s.centered]: props.titleAndSubtitleAlignCenter },\n            props.headerClassName,\n          )}\n        >\n          {/* By default Title would be aligned center */}\n          {props.title && (\n            <TypographyTitle\n              withMargin={MarginType.BOTTOM}\n              type={\n                smallSizeTitleAndSubtitle\n                  ? TypographyTitleType.CARD_SUB_TITLE\n                  : TypographyTitleType.CARD_TITLE\n              }\n              centered={props.titleAndSubtitleAlignCenter}\n            >\n              {props.title}\n            </TypographyTitle>\n          )}\n\n          {/* By default Description would be aligned center */}\n          {props.subTitle && (\n            <TypographyDescription\n              type={\n                smallSizeTitleAndSubtitle\n                  ? TypographyDescriptionType.SECONDARY_DESCRIPTION\n                  : TypographyDescriptionType.PRIMARY_DESCRIPTION\n              }\n              className={s.whiteCardSubTitle}\n              centered={props.titleAndSubtitleAlignCenter}\n            >\n              {props.subTitle}\n            </TypographyDescription>\n          )}\n        </div>\n      )}\n\n      <div\n        className={classNames(\n          { [s.whiteCardBody]: true },\n          { [`${s.bodyPadding} bodyPadding`]: withDefaultBodyPadding },\n          props.bodyClassName,\n        )}\n        style={\n          customBodyPaddingValues && {\n            padding: `${customBodyPaddingValues.top} ${customBodyPaddingValues.right} ${customBodyPaddingValues.bottom} ${customBodyPaddingValues.left} `,\n          }\n        }\n      >\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nexport default WhiteCardView;\n","import React, { ReactNode } from \"react\";\nimport WhiteCardView from \"./WhiteCardView.react\";\nimport { MarginType } from \"data/styleTypes\";\n\ninterface Props {\n  title?: string | Element | ReactNode;\n  subTitle?: string;\n  children: React.ReactNode;\n  className?: string;\n  withMargin?: MarginType;\n  titleAndSubtitleAlignCenter?: boolean;\n  withDefaultBodyPadding?: boolean;\n  smallSizeTitleAndSubtitle?: boolean;\n  customBodyPaddingValues?: {\n    left: string;\n    right: string;\n    bottom: string;\n    top: string;\n  };\n  headerClassName?: string;\n  bodyClassName?: string;\n}\n\nconst WhiteCard: React.FC<Props> = (props: Props) => {\n  return <WhiteCardView {...props} />;\n};\n\nexport default WhiteCard;\n","export { default } from \"./TypographyDescription.react\";\n\nexport enum TypographyDescriptionType {\n  PAGE_HEADER_DESCRIPTION = \"pageHeaderDescription\",\n  PRIMARY_DESCRIPTION = \"primaryDescription\",\n  SECONDARY_DESCRIPTION = \"secondaryDescription\",\n  TERNARY_DESCRIPTION = \"ternaryDescription\",\n}\n","import React from \"react\";\nimport { Typography } from \"antd\";\nimport s from \"./TypographyDescription.module.scss\";\nimport { TypographyDescriptionType } from \".\";\nimport classNames from \"classnames\";\nimport { MarginType } from \"data/styleTypes\";\nimport { getStyleWithMargin } from \"utilities/styleUtils\";\n\ninterface Props {\n  type: TypographyDescriptionType;\n  children: React.ReactNode;\n  centered?: boolean;\n  withMargin?: MarginType;\n  color?: \"blue\";\n  className?: string;\n}\n\nconst TypographyDescriptionView: React.FC<Props> = (props: Props) => {\n  const { type, centered, color, withMargin, className, ...restProps } = props;\n\n  const styleObject = getStyleWithMargin({\n    withMargin,\n    size: {\n      top: \"1rem\",\n      bottom: \"1rem\",\n      left: \"1rem\",\n      right: \"1rem\",\n    },\n  });\n\n  return (\n    <span className={s.TypographyDescription} style={styleObject}>\n      <Typography.Text\n        {...restProps}\n        className={classNames(\n          { [type]: props.className ? false : true },\n          { centered: centered },\n          { [color]: color },\n          { [className]: className },\n        )}\n      >\n        {props.children}\n      </Typography.Text>\n    </span>\n  );\n};\n\nexport default TypographyDescriptionView;\n","import React from \"react\";\nimport TypographyDescriptionView from \"./TypographyDescriptionView.react\";\nimport { TypographyDescriptionType } from \".\";\nimport { MarginType } from \"data/styleTypes\";\n\ninterface Props {\n  type: TypographyDescriptionType;\n  children: React.ReactNode;\n  centered?: boolean;\n  color?: \"blue\";\n  className?: string;\n  withMargin?: MarginType;\n}\n\nconst TypographyDescription: React.FC<Props> = (props: Props) => {\n  return <TypographyDescriptionView {...props} />;\n};\n\nexport default TypographyDescription;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WhiteCard\":\"WhiteCard_WhiteCard__1KNRm\",\"headerContainer\":\"WhiteCard_headerContainer__27ghD\",\"centered\":\"WhiteCard_centered__2HafX\",\"center\":\"WhiteCard_center__B85TX\",\"whiteCardTitle\":\"WhiteCard_whiteCardTitle__1G_Ow\",\"whiteCardSubTitle\":\"WhiteCard_whiteCardSubTitle__3_gPd\",\"whiteCardBody\":\"WhiteCard_whiteCardBody__1YeSi\",\"whiteCardSubtitle\":\"WhiteCard_whiteCardSubtitle__2WbJC\",\"bodyPadding\":\"WhiteCard_bodyPadding__sydh2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TypographyTitle\":\"TypographyTitle_TypographyTitle__3Dwn1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TypographyDescription\":\"TypographyDescription_TypographyDescription__3PGqZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"creatorProfileText\":\"CreatorProfilePopover_creatorProfileText__169xX\",\"creatorProfileFieldLabel\":\"CreatorProfilePopover_creatorProfileFieldLabel__2Yy07\",\"profileContentCard\":\"CreatorProfilePopover_profileContentCard__4EbHO\",\"profileAvatarContainer\":\"CreatorProfilePopover_profileAvatarContainer__1zdu2\",\"profileContentMetadata\":\"CreatorProfilePopover_profileContentMetadata__1sHTM\",\"profileSkillTag\":\"CreatorProfilePopover_profileSkillTag__2PLjk\",\"profileHeaderTextContainer\":\"CreatorProfilePopover_profileHeaderTextContainer__2rQ5Y\",\"popOverContent\":\"CreatorProfilePopover_popOverContent__2oGAW\",\"profileHeaderRow\":\"CreatorProfilePopover_profileHeaderRow__3j4fq\",\"profileLink\":\"CreatorProfilePopover_profileLink__kFYPN\",\"creatorProfileName\":\"CreatorProfilePopover_creatorProfileName__1Ej0d\",\"creatorProfileRoleTitle\":\"CreatorProfilePopover_creatorProfileRoleTitle__bYmV8\",\"profileContentSkills\":\"CreatorProfilePopover_profileContentSkills__Dh2yI\",\"profileContentSkillsName\":\"CreatorProfilePopover_profileContentSkillsName__2DbaT\",\"profileInfoRow\":\"CreatorProfilePopover_profileInfoRow__IXlck\",\"creatorProfileSkillsFieldLabel\":\"CreatorProfilePopover_creatorProfileSkillsFieldLabel__2Cr5S\",\"creatorProfileCompany\":\"CreatorProfilePopover_creatorProfileCompany__174Q9\",\"creatorProfileSkillTitle\":\"CreatorProfilePopover_creatorProfileSkillTitle__1E6bI\",\"creatorProfileBioContainer\":\"CreatorProfilePopover_creatorProfileBioContainer__1U8oW\",\"creatorProfileDivider\":\"CreatorProfilePopover_creatorProfileDivider__37pt1\",\"creatorProfileFooter\":\"CreatorProfilePopover_creatorProfileFooter__3kY6q\",\"creatorProfileStats\":\"CreatorProfilePopover_creatorProfileStats__3U4Sc\",\"statsDivider\":\"CreatorProfilePopover_statsDivider__28icy\",\"creatorProfileStatsTextNumber\":\"CreatorProfilePopover_creatorProfileStatsTextNumber__molUG\",\"creatorBioWrapper\":\"CreatorProfilePopover_creatorBioWrapper__2EIbl\",\"creatorProfileMissionsInfo\":\"CreatorProfilePopover_creatorProfileMissionsInfo__2yGlB\",\"profileInfoSection\":\"CreatorProfilePopover_profileInfoSection__28XbO\",\"creatorProfileLink\":\"CreatorProfilePopover_creatorProfileLink__37p2d\",\"creatorProfileLinkIcon\":\"CreatorProfilePopover_creatorProfileLinkIcon__1yqyg\"};","import { Typography } from \"antd\";\nimport React from \"react\";\nimport s from \"./CreatorProfilePopover.module.scss\";\n\ninterface Props {\n  contentType: string;\n  count?: number;\n}\n\nconst getContentTypeString = (contentType: string, count: number) => {\n  return count && count === 1 ? `${contentType}` : `${contentType}s`;\n};\n\nconst ContentCountMetadataLabel: React.FC<Props> = (props: Props) => {\n  const contentTypeString = getContentTypeString(\n    props.contentType,\n    props.count,\n  );\n  return (\n    <div className={s.creatorProfileStats}>\n      <span className={s.creatorProfileStatsTextNumber}>\n        {props.count || 0}\n      </span>{\" \"}\n      {contentTypeString}\n    </div>\n  );\n};\n\nexport default ContentCountMetadataLabel;\n","import { Popover, Tag, Typography, Divider, Icon, Row, Col } from \"antd\";\nimport * as DataTypes from \"data/types\";\nimport React from \"react\";\nimport Avatar from \"components/Avatar\";\nimport { Grid } from \"semantic-ui-react\";\nimport s from \"./CreatorProfilePopover.module.scss\";\nimport ContentCountMetadataLabel from \"./ContentCountMetadataLabel.react\";\n\ninterface Props {\n  creator: DataTypes.Creator;\n  creatorWithMetadata: DataTypes.CreatorWithMetadata;\n  children: React.ReactNode;\n  error?: Error;\n}\n\nconst CreatorProfilePopoverView: React.FC<Props> = (props: Props) => {\n  const creatorNameInfo = React.useMemo(\n    () => (\n      <div className={s.creatorProfileName}>\n        {`${props.creator.firstName} ${props.creator.lastName}`}\n      </div>\n    ),\n    [props.creator],\n  );\n\n  const showCreatorRoleInfo =\n    props.creator.creatorDetails &&\n    props.creator.creatorDetails.title &&\n    props.creator.creatorDetails.company;\n  const creatorRoleInfo = React.useMemo(\n    () =>\n      showCreatorRoleInfo && (\n        <div className={s.creatorProfileRoleTitle}>\n          {`${props.creator.creatorDetails.title} at ${props.creator.creatorDetails.company}`}\n        </div>\n      ),\n    [showCreatorRoleInfo, props.creator],\n  );\n\n  const showCreatorProfileMetadata =\n    props.creatorWithMetadata && props.creatorWithMetadata.metadata;\n  const numPlaylists = showCreatorProfileMetadata\n    ? props.creatorWithMetadata.metadata.createdPlaylists.length\n    : 0;\n\n  const numVideos = showCreatorProfileMetadata\n    ? props.creatorWithMetadata.metadata.uploadedResources.length\n    : 0;\n\n  const numMissions = showCreatorProfileMetadata\n    ? props.creatorWithMetadata.metadata.contributedMissions.length\n    : 0;\n\n  const showCreatorBio =\n    props.creator.creatorDetails && props.creator.creatorDetails.bio;\n  const creatorBio = React.useMemo(\n    () =>\n      showCreatorBio && (\n        <div className={s.creatorProfileBioContainer}>\n          {props.creator.creatorDetails.bio}\n        </div>\n      ),\n    [showCreatorBio, props.creator],\n  );\n\n  const popoverContent = (\n    <div className={s.popOverContent}>\n      <div className={s.profileHeaderRow}>\n        <div className={s.profileAvatarContainer}>\n          <Avatar\n            user={props.creator}\n            fitParent={true}\n            size={40}\n            className={s.profileAvatar}\n          />\n        </div>\n\n        <div className={s.profileHeaderTextContainer}>\n          {creatorNameInfo}\n          {creatorRoleInfo}\n        </div>\n      </div>\n      <Row>\n        <Col className={s.creatorBioWrapper} span={24}>\n          {creatorBio}\n        </Col>\n      </Row>\n      <div className={s.profileInfoRow}>\n        <div className={s.creatorProfileFooter}>\n          <ContentCountMetadataLabel contentType={\"Video\"} count={numVideos} />{\" \"}\n          <div className={s.statsDivider}>|</div>\n          <ContentCountMetadataLabel\n            contentType={\"Playlist\"}\n            count={numPlaylists}\n          />{\" \"}\n          <div className={s.statsDivider}>|</div>\n          <ContentCountMetadataLabel\n            contentType={\"Collection\"}\n            count={numMissions}\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <Popover\n      overlayStyle={{\n        minWidth: \"350px\",\n        maxWidth: \"550px\",\n        borderRadius: \"10px\",\n      }}\n      placement=\"topRight\"\n      content={popoverContent}\n    >\n      <div className={`${s.profileLink} profileLink`}>{props.children}</div>\n    </Popover>\n  );\n};\n\nexport default CreatorProfilePopoverView;\n","import * as DataTypes from \"data/types\";\nimport React from \"react\";\n\nimport { Loader } from \"semantic-ui-react\";\n\nimport { useFetchCreatorProfilePopoverData } from \"./CreatorProfilePopoverUtil\";\n\nimport CreatorProfilePopoverView from \"./CreatorProfilePopoverView.react\";\n\ninterface Props {\n  creator: DataTypes.Creator;\n  children: React.ReactNode;\n}\n\nconst CreatorProfilePopover: React.FC<Props> = (props: Props) => {\n  const {\n    isLoading,\n    creatorWithMetadata,\n    error,\n  } = useFetchCreatorProfilePopoverData(props.creator.objectID);\n\n  if (!props.creator) {\n    return <div />;\n  } else if (isLoading) {\n    return <div />;\n  } else {\n    return (\n      <CreatorProfilePopoverView\n        {...props}\n        creatorWithMetadata={creatorWithMetadata}\n        error={error}\n      />\n    );\n  }\n};\n\nexport default CreatorProfilePopover;\n","import * as DataTypes from \"data/types\";\nimport React from \"react\";\nimport RESTAPIClient from \"RESTAPIClient\";\n\ninterface State {\n  isLoading: boolean;\n  creatorWithMetadata: DataTypes.CreatorWithMetadata;\n  error?: Error;\n}\n\nconst useFetchCreatorProfilePopoverData = (creatorUserId: string): State => {\n  const [data, updateData] = React.useState({\n    isLoading: true,\n    creatorWithMetadata: null,\n    error: null,\n  });\n\n  const fetchData = async (): Promise<void> => {\n    try {\n      const creatorWithMetadata = await RESTAPIClient.Public.getWithMetadata(\n        creatorUserId,\n      );\n\n      updateData({\n        ...data,\n        creatorWithMetadata,\n        isLoading: false,\n      });\n    } catch (error) {\n      console.log(`ComponentFetchDataError: ${error}`);\n      updateData({\n        ...data,\n        isLoading: false,\n        error: error,\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n\n  return data;\n};\n\nexport { useFetchCreatorProfilePopoverData };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"creatorNotificationsRoot\":\"CreatorNotifications_creatorNotificationsRoot__S-Y1L\",\"contentTableCreatorName\":\"CreatorNotifications_contentTableCreatorName__2yxxN\",\"contentTableCreatorAvatar\":\"CreatorNotifications_contentTableCreatorAvatar__1ReCF\",\"rightHandSectionCard\":\"CreatorNotifications_rightHandSectionCard__2kuz0\",\"contentTableThumbnailImage\":\"CreatorNotifications_contentTableThumbnailImage__FSwQx\",\"contentTableHeaderText\":\"CreatorNotifications_contentTableHeaderText__2oBi9\",\"myContentActionButton\":\"CreatorNotifications_myContentActionButton__2NP_K\",\"pageHeader\":\"CreatorNotifications_pageHeader__2ss4E\",\"notificationListItem\":\"CreatorNotifications_notificationListItem__1G8zo\",\"notificationListItemMessage\":\"CreatorNotifications_notificationListItemMessage__137Uq\",\"notificationListItemDate\":\"CreatorNotifications_notificationListItemDate__1W_yr\",\"notificationListItemButtonContainer\":\"CreatorNotifications_notificationListItemButtonContainer__1BabC\",\"notificationListItemGrid\":\"CreatorNotifications_notificationListItemGrid__2Nb5Z\"};"],"sourceRoot":""}