{"version":3,"sources":["routes/resetpasswordcreator/ResetPasswordCreatorUtil.tsx","routes/resetpasswordcreator/ResetPasswordCreatorReducer.tsx","routes/resetpasswordcreator/ResetPasswordCreatorView.react.tsx","routes/resetpasswordcreator/ResetPasswordCreator.react.tsx","routes/resetpasswordcreator/ResetPasswordCreator.module.scss"],"names":["queryString","require","resetPasswordCreatorStateInit","initialState","resetPasswordCreatorReducer","state","action","type","compose","withRouter","props","React","useReducer","showSendResetLinkFormView","showResetPasswordFormView","className","s","resetPasswordCreatorView","onPasswordResetSuccess","history","push","onResetLinkSentSuccess","isCreatorSide","userEmail","firebasePasswordResetActionCode","ResetPassword","useContext","AppContext","appState","resetPasswordCreatorData","authUser","location","matchParams","useState","isLoading","error","data","updateData","fetchData","a","queryParams","parse","search","mode","oobCode","verifyPasswordResetCode","useEffect","useFetchResetPasswordCreatorData","match","LoadingView","currentCreator","to","module","exports"],"mappings":"+NAKMA,EAAcC,EAAQ,K,yBCCtBC,EAAgC,SACpCC,GADoC,sBAGjCA,IAGCC,EAA8B,SAClCC,EACAC,GAII,OAFIA,EAAOC,KAEJF,G,kBC4BEG,cAAsBC,IAAtBD,EAzBmC,SAACE,GAAkB,IAAD,EACpBC,IAAMC,WAClDR,EACA,CACES,0BAA2BH,EAAMG,0BACjCC,0BAA2BJ,EAAMI,2BAEnCZ,GAPgE,6BAUlE,OACE,yBAAKa,UAAWC,IAAEC,0BAChB,kBAAC,IAAD,CACEC,uBAAwB,kBAAMR,EAAMS,QAAQC,KAAK,mBACjDC,uBAAwB,kBAAMX,EAAMS,QAAQC,KAAK,MACjDE,eAAe,EACfC,UAAWb,EAAMa,UACjBV,0BAA2BH,EAAMG,0BACjCC,0BAA2BJ,EAAMI,0BACjCU,gCAAiCd,EAAMc,sCCIhCC,EA/BwB,SAACf,GAAkB,IAAD,EACpCC,IAAMe,WAAWC,KAA7BC,EADgD,oBAEjDC,EHMiC,SACvCC,EACAC,EACAC,GAC+B,IAAD,EACHrB,IAAMsB,SAAoC,CACnEC,WAAW,EACXC,MAAO,OAHqB,mBACvBC,EADuB,KACjBC,EADiB,KAMxBC,EAAS,uCAAG,8BAAAC,EAAA,0DACZT,EADY,gBAEd,IACEO,EAAW,eACND,EADK,CAERF,WAAW,KAEb,MAAOC,GACPE,EAAW,eACND,EADK,CAERF,WAAW,EACXC,MAAOA,KAXG,4BAeRK,EAAcxC,EAAYyC,MAC9BV,EAASW,SAEKC,OAAQH,EAAYI,QAlBtB,0CAoBcC,YAAwBL,EAAYI,SApBlD,OAoBJrB,EApBI,OAqBVc,EAAW,eACND,EADK,CAERF,WAAW,EACXrB,2BAA2B,EAC3BC,2BAA2B,EAC3BU,gCAAiCgB,EAAYI,QAC7CrB,UAAWA,KA3BH,kDA8BVc,EAAW,eACND,EADK,CAERF,WAAW,EACXC,MAAM,EAAD,MAjCG,gCAqCZE,EAAW,eACND,EADK,CAERF,WAAW,EACXrB,2BAA2B,EAC3BC,2BAA2B,KAzCjB,0DAAH,qDAmDf,OAJAH,IAAMmC,WAAU,WACdR,MACC,IAEIF,EGnE0BW,CAC/BnB,EAASE,SACTpB,EAAMqB,SACNrB,EAAMsC,OAGR,OAAInB,EAAyBK,UACpB,kBAACe,EAAA,EAAD,MACErB,EAASE,UAAYF,EAASsB,eAChC,kBAAC,IAAD,CAAUC,GAAI,MAGnB,kBAAC,EAAD,CACEhB,MAAON,EAAyBM,MAChCZ,UAAWM,EAAyBN,UACpCV,0BACEgB,EAAyBhB,0BAE3BC,0BACEe,EAAyBf,0BAE3BU,gCACEK,EAAyBL,oC,oBCpCnC4B,EAAOC,QAAU,CAAC,yBAA2B","file":"static/js/50.8b20b90d.chunk.js","sourcesContent":["import * as DataTypes from \"data/types\";\nimport React from \"react\";\nimport RESTAPIClient from \"RESTAPIClient\";\nimport { verifyPasswordResetCode } from \"FirebaseClient\";\n\nconst queryString = require(\"query-string\");\n\ninterface ResetPasswordCreatorState {\n  isLoading: boolean;\n  userEmail?: string;\n  showSendResetLinkFormView?: boolean;\n  showResetPasswordFormView?: boolean;\n  firebasePasswordResetActionCode?: string;\n  error?: Error;\n}\n\ninterface ResetPasswordCreatorQueryParams {\n  mode?: string;\n  oobCode?: string;\n}\n\nconst useFetchResetPasswordCreatorData = (\n  authUser,\n  location,\n  matchParams,\n): ResetPasswordCreatorState => {\n  const [data, updateData] = React.useState<ResetPasswordCreatorState>({\n    isLoading: true,\n    error: null,\n  });\n\n  const fetchData = async (): Promise<void> => {\n    if (authUser) {\n      try {\n        updateData({\n          ...data,\n          isLoading: false,\n        });\n      } catch (error) {\n        updateData({\n          ...data,\n          isLoading: false,\n          error: error,\n        });\n      }\n    } else {\n      const queryParams = queryString.parse(\n        location.search,\n      ) as ResetPasswordCreatorQueryParams;\n      if (queryParams.mode && queryParams.oobCode) {\n        try {\n          const userEmail = await verifyPasswordResetCode(queryParams.oobCode);\n          updateData({\n            ...data,\n            isLoading: false,\n            showSendResetLinkFormView: false,\n            showResetPasswordFormView: true,\n            firebasePasswordResetActionCode: queryParams.oobCode,\n            userEmail: userEmail,\n          });\n        } catch (error) {\n          updateData({\n            ...data,\n            isLoading: false,\n            error: error,\n          });\n        }\n      } else {\n        updateData({\n          ...data,\n          isLoading: false,\n          showSendResetLinkFormView: true,\n          showResetPasswordFormView: false,\n        });\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n\n  return data;\n};\n\nexport { useFetchResetPasswordCreatorData };\n","interface ResetPasswordCreatorState {}\n\ninterface ResetPasswordCreatorAction {\n  type?: string;\n}\n\nconst resetPasswordCreatorStateInit = (\n  initialState: ResetPasswordCreatorState,\n): ResetPasswordCreatorState => ({\n  ...initialState,\n});\n\nconst resetPasswordCreatorReducer = (\n  state: ResetPasswordCreatorState,\n  action: ResetPasswordCreatorAction,\n): ResetPasswordCreatorState => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport { resetPasswordCreatorStateInit, resetPasswordCreatorReducer };\n","import { Form, notification, message } from \"antd\";\nimport React, { MutableRefObject } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { compose } from \"recompose\";\nimport { History } from \"history\";\nimport ResetPassword from \"components/ResetPassword\";\nimport {\n  resetPasswordCreatorReducer,\n  resetPasswordCreatorStateInit,\n} from \"./ResetPasswordCreatorReducer\";\nimport s from \"./ResetPasswordCreator.module.scss\";\n\ninterface Props {\n  history?: History;\n  error?: Error;\n  userEmail?: string;\n  showSendResetLinkFormView?: boolean;\n  showResetPasswordFormView?: boolean;\n  firebasePasswordResetActionCode?: string;\n}\n\nconst ResetPasswordCreatorView: React.FC<Props> = (props: Props) => {\n  const [resetPasswordCreatorState, dispatch] = React.useReducer(\n    resetPasswordCreatorReducer,\n    {\n      showSendResetLinkFormView: props.showSendResetLinkFormView,\n      showResetPasswordFormView: props.showResetPasswordFormView,\n    },\n    resetPasswordCreatorStateInit,\n  );\n\n  return (\n    <div className={s.resetPasswordCreatorView}>\n      <ResetPassword\n        onPasswordResetSuccess={() => props.history.push(\"/login-creator\")}\n        onResetLinkSentSuccess={() => props.history.push(\"/\")}\n        isCreatorSide={true}\n        userEmail={props.userEmail}\n        showSendResetLinkFormView={props.showSendResetLinkFormView}\n        showResetPasswordFormView={props.showResetPasswordFormView}\n        firebasePasswordResetActionCode={props.firebasePasswordResetActionCode}\n      />\n    </div>\n  );\n};\n\nexport default compose<Props, Props>(withRouter)(ResetPasswordCreatorView);\n","import { AppContext } from \"App\";\nimport React from \"react\";\nimport { Redirect, match } from \"react-router-dom\";\nimport { Location } from \"history\";\nimport { useFetchResetPasswordCreatorData } from \"./ResetPasswordCreatorUtil\";\nimport LoadingView from \"components/Views/LoadingView\";\nimport ResetPasswordCreatorView from \"./ResetPasswordCreatorView.react\";\n\ninterface Props {\n  location?: Location;\n  match?: match;\n}\n\nconst ResetPassword: React.FC<Props> = (props: Props) => {\n  const [appState] = React.useContext(AppContext);\n  const resetPasswordCreatorData = useFetchResetPasswordCreatorData(\n    appState.authUser,\n    props.location,\n    props.match,\n  );\n\n  if (resetPasswordCreatorData.isLoading) {\n    return <LoadingView />;\n  } else if (appState.authUser && appState.currentCreator) {\n    return <Redirect to={\"/\"} />;\n  } else {\n    return (\n      <ResetPasswordCreatorView\n        error={resetPasswordCreatorData.error}\n        userEmail={resetPasswordCreatorData.userEmail}\n        showSendResetLinkFormView={\n          resetPasswordCreatorData.showSendResetLinkFormView\n        }\n        showResetPasswordFormView={\n          resetPasswordCreatorData.showResetPasswordFormView\n        }\n        firebasePasswordResetActionCode={\n          resetPasswordCreatorData.firebasePasswordResetActionCode\n        }\n      />\n    );\n  }\n};\n\nexport default ResetPassword;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resetPasswordCreatorView\":\"ResetPasswordCreator_resetPasswordCreatorView__3kbSV\"};"],"sourceRoot":""}